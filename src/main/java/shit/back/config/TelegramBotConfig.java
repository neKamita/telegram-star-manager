package shit.back.config;

import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Profile;
import org.telegram.telegrambots.meta.TelegramBotsApi;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;
import org.telegram.telegrambots.updatesreceivers.DefaultBotSession;
import shit.back.service.TelegramBotService;
import shit.back.service.TelegramWebhookBotService;

import jakarta.annotation.PostConstruct;

@Slf4j
@Configuration
public class TelegramBotConfig {
    
    @Autowired(required = false)
    private TelegramBotService telegramBotService;
    
    @Autowired(required = false)
    private TelegramWebhookBotService telegramWebhookBotService;
    
    @Bean
    @Profile("!production")
    public TelegramBotsApi telegramBotsApiForDevelopment() {
        try {
            TelegramBotsApi api = new TelegramBotsApi(DefaultBotSession.class);
            log.info("TelegramBotsApi created for development/staging environment");
            return api;
        } catch (TelegramApiException e) {
            log.error("Error creating TelegramBotsApi: {}", e.getMessage(), e);
            throw new RuntimeException("Failed to create TelegramBotsApi", e);
        }
    }
    
    @Bean
    @Profile("production")
    public TelegramBotsApi telegramBotsApiForProduction() {
        try {
            TelegramBotsApi api = new TelegramBotsApi(DefaultBotSession.class);
            log.info("TelegramBotsApi created for production environment (webhook mode)");
            return api;
        } catch (TelegramApiException e) {
            log.error("Error creating TelegramBotsApi: {}", e.getMessage(), e);
            // In production, don't throw exception - let webhook work independently
            log.warn("‚ö†Ô∏è  TelegramBotsApi creation failed, but webhook can still work");
            return null;
        }
    }
    
    @PostConstruct
    public void registerBots() {
        String activeProfiles = System.getProperty("spring.profiles.active", "default");
        boolean isProduction = activeProfiles.contains("production");
        
        log.info("üîÑ TelegramBotConfig.registerBots() –≤—ã–∑–≤–∞–Ω");
        log.info("üìã –ê–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª–∏: {}", activeProfiles);
        log.info("üéØ –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã: {}", isProduction ? "PRODUCTION (Webhook)" : "DEVELOPMENT (Polling)");
        
        try {
            if (!isProduction) {
                // Development/staging mode - –∏—Å–ø–æ–ª—å–∑—É–µ–º polling
                if (telegramBotService != null) {
                    log.info("ü§ñ Development mode: –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è TelegramBotService (Long Polling)");
                    TelegramBotsApi api = telegramBotsApiForDevelopment();
                    if (api != null) {
                        try {
                            api.registerBot(telegramBotService);
                            telegramBotService.markAsRegistered();
                            log.info("‚úÖ TelegramBotService —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –¥–ª—è development");
                        } catch (TelegramApiException e) {
                            telegramBotService.markRegistrationFailed(e.getMessage());
                            log.error("‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ TelegramBotService: {}", e.getMessage());
                            
                            if (e.getMessage().contains("can't use getUpdates method while webhook is active")) {
                                log.error("üí° –†–ï–®–ï–ù–ò–ï: Webhook –≤—Å–µ –µ—â–µ –∞–∫—Ç–∏–≤–µ–Ω! TelegramBotService –ø–æ–ø—ã—Ç–∞–µ—Ç—Å—è –µ–≥–æ —É–¥–∞–ª–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏");
                                log.error("üí° –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è, –≤—Ä—É—á–Ω—É—é —É–¥–∞–ª–∏—Ç–µ webhook —á–µ—Ä–µ–∑ Bot API");
                            }
                        }
                    } else {
                        log.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å TelegramBotsApi –¥–ª—è development");
                    }
                } else {
                    log.warn("‚ö†Ô∏è TelegramBotService –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è development —Ä–µ–∂–∏–º–∞!");
                    log.warn("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –ø—Ä–æ—Ñ–∏–ª—å –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç 'production'");
                }
                
                // –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞–µ–º, –µ—Å–ª–∏ webhook —Å–µ—Ä–≤–∏—Å –∞–∫—Ç–∏–≤–µ–Ω –≤ dev —Ä–µ–∂–∏–º–µ
                if (telegramWebhookBotService != null) {
                    log.warn("‚ö†Ô∏è TelegramWebhookBotService –∞–∫—Ç–∏–≤–µ–Ω –≤ development —Ä–µ–∂–∏–º–µ!");
                    log.warn("üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—Ä–æ—Ñ–∏–ª—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ");
                }
                
            } else {
                // Production mode - –∏—Å–ø–æ–ª—å–∑—É–µ–º webhook
                if (telegramWebhookBotService != null) {
                    log.info("ü§ñ Production mode: TelegramWebhookBotService –∞–∫—Ç–∏–≤–µ–Ω");
                    log.info("üìå Webhook bots —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç TelegramBotsApi");
                    log.info("üåê Webhook URL: {}", telegramWebhookBotService.getBotPath());
                    log.info("üë§ Bot Username: {}", telegramWebhookBotService.getBotUsername());
                    log.info("‚úÖ TelegramWebhookBotService –≥–æ—Ç–æ–≤ –∫ –ø—Ä–∏–µ–º—É webhook –∑–∞–ø—Ä–æ—Å–æ–≤");
                } else {
                    log.error("‚ùå TelegramWebhookBotService –ù–ï –ù–ê–ô–î–ï–ù –≤ production —Ä–µ–∂–∏–º–µ!");
                    log.error("üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è 'production'");
                }
                
                // –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞–µ–º, –µ—Å–ª–∏ polling —Å–µ—Ä–≤–∏—Å –∞–∫—Ç–∏–≤–µ–Ω –≤ prod —Ä–µ–∂–∏–º–µ
                if (telegramBotService != null) {
                    log.warn("‚ö†Ô∏è TelegramBotService –∞–∫—Ç–∏–≤–µ–Ω –≤ production —Ä–µ–∂–∏–º–µ!");
                    log.warn("üí° –í production –¥–æ–ª–∂–µ–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ webhook");
                }
            }
            
        } catch (Exception e) {
            log.error("üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –±–æ—Ç–æ–≤: {}", e.getMessage(), e);
            
            if (isProduction && telegramWebhookBotService != null) {
                log.warn("üîÑ –í production —Ä–µ–∂–∏–º–µ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É —Å webhook");
            } else {
                log.error("üí• –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –±–æ—Ç–∞ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —Ä–µ–∂–∏–º–∞");
            }
        }
        
        log.info("üèÅ TelegramBotConfig.registerBots() –∑–∞–≤–µ—Ä—à–µ–Ω");
    }
}
