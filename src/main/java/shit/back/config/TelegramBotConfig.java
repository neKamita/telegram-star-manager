package shit.back.config;

import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Profile;
import org.telegram.telegrambots.meta.TelegramBotsApi;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;
import org.telegram.telegrambots.updatesreceivers.DefaultBotSession;
import shit.back.service.TelegramBotService;
import shit.back.service.TelegramWebhookBotService;

import jakarta.annotation.PostConstruct;

@Slf4j
@Configuration
public class TelegramBotConfig {
    
    @Autowired(required = false)
    private TelegramBotService telegramBotService;
    
    @Autowired(required = false)
    private TelegramWebhookBotService telegramWebhookBotService;
    
    @Bean
    @Profile("!production")
    public TelegramBotsApi telegramBotsApiForDevelopment() {
        try {
            TelegramBotsApi api = new TelegramBotsApi(DefaultBotSession.class);
            log.info("TelegramBotsApi created for development/staging environment");
            return api;
        } catch (TelegramApiException e) {
            log.error("Error creating TelegramBotsApi: {}", e.getMessage(), e);
            throw new RuntimeException("Failed to create TelegramBotsApi", e);
        }
    }
    
    @Bean
    @Profile("production")
    public TelegramBotsApi telegramBotsApiForProduction() {
        try {
            TelegramBotsApi api = new TelegramBotsApi(DefaultBotSession.class);
            log.info("TelegramBotsApi created for production environment (webhook mode)");
            return api;
        } catch (TelegramApiException e) {
            log.error("Error creating TelegramBotsApi: {}", e.getMessage(), e);
            // In production, don't throw exception - let webhook work independently
            log.warn("‚ö†Ô∏è  TelegramBotsApi creation failed, but webhook can still work");
            return null;
        }
    }
    
    @PostConstruct
    public void registerBots() {
        log.info("üîÑ TelegramBotConfig.registerBots() –≤—ã–∑–≤–∞–Ω");
        log.info("üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª–∏: {}", System.getProperty("spring.profiles.active"));
        
        try {
            // Register long polling bot for development
            if (telegramBotService != null) {
                log.info("ü§ñ Development mode: Using TelegramBotService (Long Polling)");
                TelegramBotsApi api = telegramBotsApiForDevelopment();
                if (api != null) {
                    api.registerBot(telegramBotService);
                    log.info("‚úÖ TelegramBotService –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –¥–ª—è development");
                }
            } else {
                log.info("‚ùå TelegramBotService –Ω–µ –Ω–∞–π–¥–µ–Ω (–Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è production)");
            }
            
            // Webhook bot for production - does NOT need registration in TelegramBotsApi
            if (telegramWebhookBotService != null) {
                log.info("ü§ñ Production mode: Using TelegramWebhookBotService (Webhook)");
                log.info("üìå Webhook bots —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç TelegramBotsApi");
                log.info("üåê Webhook URL: {}", telegramWebhookBotService.getBotPath());
                log.info("üë§ Bot Username: {}", telegramWebhookBotService.getBotUsername());
                log.info("‚úÖ TelegramWebhookBotService –≥–æ—Ç–æ–≤ –∫ –ø—Ä–∏–µ–º—É webhook –∑–∞–ø—Ä–æ—Å–æ–≤");
            } else {
                log.error("‚ùå TelegramWebhookBotService –ù–ï –ù–ê–ô–î–ï–ù! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–æ—Ñ–∏–ª—å –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é");
                log.error("üîç –¢–µ–∫—É—â–∏–π –ø—Ä–æ—Ñ–∏–ª—å: {}", System.getProperty("spring.profiles.active"));
            }
            
        } catch (Exception e) {
            log.error("üí• –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –±–æ—Ç–æ–≤: {}", e.getMessage(), e);
            // –í production –Ω–µ –ø–∞–¥–∞–µ–º, webhook –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ
            if (telegramWebhookBotService != null) {
                log.warn("üîÑ –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É —Å webhook –±–µ–∑ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ API");
            }
        }
        
        log.info("üèÅ TelegramBotConfig.registerBots() –∑–∞–≤–µ—Ä—à–µ–Ω");
    }
}
