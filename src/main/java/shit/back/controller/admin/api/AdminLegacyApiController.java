package shit.back.controller.admin.api;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RestController;

import jakarta.servlet.http.HttpServletRequest;
import java.util.concurrent.CompletableFuture;

/**
 * Legacy API –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –¥–ª—è –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏
 * –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –æ–±—Ä–∞—Ç–Ω—É—é —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å–æ —Å—Ç–∞—Ä—ã–º–∏ API endpoints
 * –î–µ–ª–µ–≥–∏—Ä—É–µ—Ç –≤—ã–∑–æ–≤—ã –æ—Å–Ω–æ–≤–Ω–æ–º—É AdminDashboardApiController
 */
@RestController
public class AdminLegacyApiController {

    private static final Logger log = LoggerFactory.getLogger(AdminLegacyApiController.class);

    private final AdminDashboardApiController dashboardController;

    @Autowired
    public AdminLegacyApiController(AdminDashboardApiController dashboardController) {
        this.dashboardController = dashboardController;
    }

    /**
     * Legacy endpoint –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –¥–∞—à–±–æ—Ä–¥–∞
     * –ü—É—Ç—å: /admin/api/dashboard-data
     * –î–µ–ª–µ–≥–∏—Ä—É–µ—Ç –∫ AdminDashboardApiController.getDashboardOverview()
     */
    @GetMapping("/admin/api/dashboard-data")
    public ResponseEntity<Object> getDashboardDataLegacy(HttpServletRequest request) {
        log.debug("Legacy API: dashboard-data endpoint called, delegating to dashboard controller");
        return dashboardController.getDashboardOverview(request);
    }

    /**
     * Legacy endpoint –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–¥–æ—Ä–æ–≤—å—è —Å–∏—Å—Ç–µ–º—ã
     * –ü—É—Ç—å: /admin/api/system-health
     * –î–µ–ª–µ–≥–∏—Ä—É–µ—Ç –∫ AdminDashboardApiController.getSystemHealth()
     */
    @GetMapping("/admin/api/system-health")
    public CompletableFuture<ResponseEntity<Object>> getSystemHealthLegacy(HttpServletRequest request) {
        log.debug("Legacy API: system-health endpoint called, delegating to dashboard controller");
        log.info("üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: System health request from: {}, User-Agent: {}",
                request.getRemoteAddr(), request.getHeader("User-Agent"));
        return dashboardController.getSystemHealth(request);
    }
}