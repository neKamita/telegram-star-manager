package shit.back.handler;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.Message;
import org.telegram.telegrambots.meta.api.objects.User;
import shit.back.annotation.FeatureFlag;
import shit.back.model.UserSession;
import shit.back.model.Order;
import shit.back.service.PriceService;
import shit.back.service.UserSessionService;
import shit.back.utils.MessageUtils;

import java.util.Optional;

@Component
public class MessageHandler {
    
    @Autowired
    private UserSessionService userSessionService;
    
    @Autowired
    private PriceService priceService;
    
    public SendMessage handleMessage(Message message) {
        String text = message.getText();
        User user = message.getFrom();
        Long chatId = message.getChatId();
        
        // –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –ø–æ–ª—É—á–∞–µ–º —Å–µ—Å—Å–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        UserSession session = userSessionService.getOrCreateSession(
            user.getId(),
            user.getUserName(),
            user.getFirstName(),
            user.getLastName()
        );
        
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
        if (text.startsWith("/")) {
            return handleCommand(text, chatId, session);
        }
        
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        return handleTextMessage(text, chatId, session);
    }
    
    private SendMessage handleCommand(String command, Long chatId, UserSession session) {
        return switch (command.toLowerCase()) {
            case "/start" -> handleStartCommand(chatId, session);
            case "/help" -> handleHelpCommand(chatId);
            case "/prices" -> handlePricesCommand(chatId);
            case "/status" -> handleStatusCommand(chatId, session);
            case "/cancel" -> handleCancelCommand(chatId, session);
            case "/beta" -> handleBetaCommand(chatId, session);
            case "/premium" -> handlePremiumCommand(chatId, session);
            default -> MessageUtils.createMessage(chatId, 
                "‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.");
        };
    }
    
    private SendMessage handleStartCommand(Long chatId, UserSession session) {
        String welcomeText = MessageUtils.formatWelcomeMessage(session.getDisplayName());
        return MessageUtils.createMessageWithKeyboard(chatId, welcomeText, 
            MessageUtils.createMainMenuKeyboard());
    }
    
    private SendMessage handleHelpCommand(Long chatId) {
        return MessageUtils.createMessage(chatId, MessageUtils.formatHelpMessage());
    }
    
    private SendMessage handlePricesCommand(Long chatId) {
        String pricesText = MessageUtils.formatPricesMessage(priceService.getAllPackages());
        return MessageUtils.createMessageWithKeyboard(chatId, pricesText,
            MessageUtils.createPackageSelectionKeyboard(priceService.getAllPackages()));
    }
    
    private SendMessage handleStatusCommand(Long chatId, UserSession session) {
        Optional<Order> activeOrder = userSessionService.getUserActiveOrder(session.getUserId());
        
        if (activeOrder.isPresent()) {
            Order order = activeOrder.get();
            String statusText = String.format("""
                üìã <b>–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ %s</b>
                
                %s <b>–°—Ç–∞—Ç—É—Å:</b> %s
                ‚≠ê <b>–ó–≤–µ–∑–¥—ã:</b> %d
                üí∞ <b>–°—É–º–º–∞:</b> $%.2f
                üìÖ <b>–°–æ–∑–¥–∞–Ω:</b> %s
                """,
                order.getFormattedOrderId(),
                order.getStatusEmoji(),
                order.getStatus().name(),
                order.getStarPackage().getStars(),
                order.getAmount(),
                order.getCreatedAt().toString()
            );
            
            return MessageUtils.createMessage(chatId, statusText);
        } else {
            return MessageUtils.createMessage(chatId, 
                "üìã –£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤.\n\nüí∞ –ù–∞–∂–º–∏—Ç–µ /start —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑!");
        }
    }
    
    private SendMessage handleCancelCommand(Long chatId, UserSession session) {
        userSessionService.clearUserSession(session.getUserId());
        return MessageUtils.createMessage(chatId, 
            "‚ùå –¢–µ–∫—É—â–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.\n\nüè† –í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é: /start");
    }
    
    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –±–µ—Ç–∞-—Ñ—É–Ω–∫—Ü–∏–π (–ø—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ñ–ª–∞–≥–∞ —Ñ—É–Ω–∫—Ü–∏–π)
     */
    @FeatureFlag(value = "BETA_FEATURES", 
                 description = "–î–æ—Å—Ç—É–ø –∫ –±–µ—Ç–∞-—Ñ—É–Ω–∫—Ü–∏—è–º", 
                 fallback = "handleBetaCommandFallback",
                 experimental = true)
    private SendMessage handleBetaCommand(Long chatId, UserSession session) {
        String betaText = """
            üß™ <b>–ë–µ—Ç–∞-—Ñ—É–Ω–∫—Ü–∏–∏</b>
            
            ‚ú® –í—ã –ø–æ–ª—É—á–∏–ª–∏ –¥–æ—Å—Ç—É–ø –∫ –Ω–æ–≤—ã–º —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω—ã–º —Ñ—É–Ω–∫—Ü–∏—è–º!
            
            üî∏ –£–ª—É—á—à–µ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –∑–∞–∫–∞–∑–æ–≤
            üî∏ –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
            üî∏ –ë—ã—Å—Ç—Ä—ã–µ –ø–ª–∞—Ç–µ–∂–∏
            üî∏ –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
            
            ‚ö†Ô∏è <i>–≠—Ç–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏</i>
            """;
        
        return MessageUtils.createMessage(chatId, betaText);
    }
    
    private SendMessage handleBetaCommandFallback(Long chatId, UserSession session) {
        return MessageUtils.createMessage(chatId, 
            "üîí –ë–µ—Ç–∞-—Ñ—É–Ω–∫—Ü–∏–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã.\n\n" +
            "üí° –°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ –≤ –Ω–∞—à–µ–º –∫–∞–Ω–∞–ª–µ!");
    }
    
    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–µ–º–∏—É–º-—Ñ—É–Ω–∫—Ü–∏–π (–ø—Ä–∏–º–µ—Ä —Å –ø—Ä–æ—Ü–µ–Ω—Ç–Ω—ã–º rollout)
     */
    @FeatureFlag(value = "PREMIUM_FEATURES", 
                 description = "–ü—Ä–µ–º–∏—É–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è VIP –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
                 fallback = "handlePremiumCommandFallback")
    private SendMessage handlePremiumCommand(Long chatId, UserSession session) {
        String premiumText = """
            üíé <b>–ü—Ä–µ–º–∏—É–º —Ñ—É–Ω–∫—Ü–∏–∏</b>
            
            üåü –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ VIP –∑–æ–Ω—É!
            
            ‚ö° –ú–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫–∞–∑–æ–≤
            üí∞ –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ —Å–∫–∏–¥–∫–∏ –¥–æ 30%
            üéÅ –ë–æ–Ω—É—Å–Ω—ã–µ –∑–≤–µ–∑–¥—ã –∑–∞ –∫–∞–∂–¥—É—é –ø–æ–∫—É–ø–∫—É
            üìû –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7
            üèÜ –î–æ—Å—Ç—É–ø –∫ –ª–∏–º–∏—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –ø–∞–∫–µ—Ç–∞–º
            
            ‚ú® <i>–í–∞—à —Å—Ç–∞—Ç—É—Å: VIP –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å</i>
            """;
        
        return MessageUtils.createMessage(chatId, premiumText);
    }
    
    private SendMessage handlePremiumCommandFallback(Long chatId, UserSession session) {
        return MessageUtils.createMessage(chatId, 
            "üíé –ü—Ä–µ–º–∏—É–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ –¥–ª—è VIP –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.\n\n" +
            "üöÄ –•–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø? –°–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π!");
    }
    
    /**
     * –£–ª—É—á—à–µ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å —Ñ–ª–∞–≥–æ–º —Ñ—É–Ω–∫—Ü–∏–π
     */
    @FeatureFlag(value = "ENHANCED_STATUS", 
                 description = "–†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤ —Å—Ç–∞—Ç—É—Å–µ –∑–∞–∫–∞–∑–∞",
                 fallback = "handleStatusCommandBasic")
    private SendMessage handleStatusCommandEnhanced(Long chatId, UserSession session) {
        Optional<Order> activeOrder = userSessionService.getUserActiveOrder(session.getUserId());
        
        if (activeOrder.isPresent()) {
            Order order = activeOrder.get();
            String enhancedStatusText = String.format("""
                üìã <b>–î–µ—Ç–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ %s</b>
                
                %s <b>–°—Ç–∞—Ç—É—Å:</b> %s
                ‚≠ê <b>–ó–≤–µ–∑–¥—ã:</b> %d
                üí∞ <b>–°—É–º–º–∞:</b> $%.2f
                üìÖ <b>–°–æ–∑–¥–∞–Ω:</b> %s
                
                üìä <b>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>
                ‚è±Ô∏è –í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: ~5 –º–∏–Ω—É—Ç
                üîÑ –ü—Ä–æ–≥—Ä–µ—Å—Å: 75%%
                üìà –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: –í—ã—Å–æ–∫–∏–π
                üéØ ETA: 2-3 –º–∏–Ω—É—Ç—ã
                """,
                order.getFormattedOrderId(),
                order.getStatusEmoji(),
                order.getStatus().name(),
                order.getStarPackage().getStars(),
                order.getAmount(),
                order.getCreatedAt().toString()
            );
            
            return MessageUtils.createMessage(chatId, enhancedStatusText);
        } else {
            return MessageUtils.createMessage(chatId, 
                "üìã –£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤.\n\nüí∞ –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑: /start");
        }
    }
    
    private SendMessage handleStatusCommandBasic(Long chatId, UserSession session) {
        // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ (—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–¥)
        return handleStatusCommand(chatId, session);
    }
    
    private SendMessage handleTextMessage(String text, Long chatId, UserSession session) {
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        return switch (session.getState()) {
            case IDLE -> MessageUtils.createMessage(chatId, 
                "üëã –ü—Ä–∏–≤–µ—Ç! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –∏–ª–∏ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–º–æ—â–∏.");
            
            case SELECTING_PACKAGE -> MessageUtils.createMessage(chatId,
                "üì¶ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø–∞–∫–µ—Ç –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤, –∏—Å–ø–æ–ª—å–∑—É—è –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é.");
            
            case CONFIRMING_ORDER -> MessageUtils.createMessage(chatId,
                "‚è≥ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∑–∞–∫–∞–∑, –∏—Å–ø–æ–ª—å–∑—É—è –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é.");
            
            case AWAITING_PAYMENT -> MessageUtils.createMessage(chatId,
                "üí≥ –û–∂–∏–¥–∞–µ–º –æ–ø–ª–∞—Ç—É. –í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.");
            
            case PAYMENT_PROCESSING -> MessageUtils.createMessage(chatId,
                "‚öôÔ∏è –í–∞—à –ø–ª–∞—Ç–µ–∂ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...");
            
            case COMPLETED -> MessageUtils.createMessage(chatId,
                "‚úÖ –í–∞—à –∑–∞–∫–∞–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –Ω–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞.");
            
            default -> MessageUtils.createMessage(chatId,
                "ü§î –ù–µ –ø–æ–Ω–∏–º–∞—é. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–º–æ—â–∏.");
        };
    }
}
