package shit.back.handler;

import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.Message;
import org.telegram.telegrambots.meta.api.objects.User;
import shit.back.entity.BalanceTransactionEntity;
import shit.back.entity.UserBalanceEntity;
import shit.back.exception.BalanceException;
import shit.back.exception.InsufficientBalanceException;
import shit.back.model.UserSession;
import shit.back.model.Order;
import shit.back.service.BalanceService;
import shit.back.service.BalanceTransactionService;
import shit.back.service.PriceService;
import shit.back.service.UserSessionService;
import shit.back.utils.MessageUtils;

import java.util.List;
import java.util.Optional;

@Slf4j
@Component
public class MessageHandler {

    @Autowired
    private UserSessionService userSessionService;

    @Autowired
    private PriceService priceService;

    // === –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –° –°–ò–°–¢–ï–ú–û–ô –ë–ê–õ–ê–ù–°–ê ===
    @Autowired
    private BalanceService balanceService;

    @Autowired
    private BalanceTransactionService balanceTransactionService;

    public SendMessage handleMessage(Message message) {
        String text = message.getText();
        User user = message.getFrom();
        Long chatId = message.getChatId();

        log.info("üí¨ MessageHandler: –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç {} (ID: {}): {}",
                user.getFirstName(), user.getId(), text);

        // –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –ø–æ–ª—É—á–∞–µ–º —Å–µ—Å—Å–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        UserSession session = userSessionService.getOrCreateSession(
                user.getId(),
                user.getUserName(),
                user.getFirstName(),
                user.getLastName());

        log.debug("üë§ –°–µ—Å—Å–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: —Å–æ—Å—Ç–æ—è–Ω–∏–µ = {}", session.getState());

        SendMessage response;

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
        if (text.startsWith("/")) {
            log.info("‚ö° –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã: {}", text);
            response = handleCommand(text, chatId, session);
        } else {
            log.info("üìù –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏: {}", session.getState());
            response = handleTextMessage(text, chatId, session);
        }

        log.info("üì® MessageHandler: –æ—Ç–≤–µ—Ç –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω –¥–ª—è chatId {}", chatId);
        return response;
    }

    private SendMessage handleCommand(String command, Long chatId, UserSession session) {
        return switch (command.toLowerCase()) {
            case "/start" -> handleStartCommand(chatId, session);
            case "/help" -> handleHelpCommand(chatId);
            case "/prices" -> handlePricesCommand(chatId);
            case "/status" -> handleStatusCommand(chatId, session);
            case "/cancel" -> handleCancelCommand(chatId, session);
            case "/beta" -> handleBetaCommand(chatId, session);
            case "/premium" -> handlePremiumCommand(chatId, session);
            // === –ù–û–í–´–ï –ö–û–ú–ê–ù–î–´ –ë–ê–õ–ê–ù–°–ê ===
            case "/balance" -> handleBalanceCommand(chatId, session);
            case "/topup" -> handleTopupCommand(chatId, session);
            case "/history" -> handleHistoryCommand(chatId, session);
            default -> MessageUtils.createMessage(chatId,
                    "‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.");
        };
    }

    private SendMessage handleStartCommand(Long chatId, UserSession session) {
        String welcomeText = MessageUtils.formatWelcomeMessage(session.getDisplayName());
        return MessageUtils.createMessageWithKeyboard(chatId, welcomeText,
                MessageUtils.createMainMenuKeyboard());
    }

    private SendMessage handleHelpCommand(Long chatId) {
        return MessageUtils.createMessage(chatId, MessageUtils.formatHelpMessage());
    }

    private SendMessage handlePricesCommand(Long chatId) {
        String pricesText = MessageUtils.formatPricesMessage(priceService.getAllPackages());
        return MessageUtils.createMessageWithKeyboard(chatId, pricesText,
                MessageUtils.createPackageSelectionKeyboard(priceService.getAllPackages()));
    }

    private SendMessage handleStatusCommand(Long chatId, UserSession session) {
        Optional<Order> activeOrder = userSessionService.getUserActiveOrder(session.getUserId());

        if (activeOrder.isPresent()) {
            Order order = activeOrder.get();
            String statusText = String.format("""
                    üìã <b>–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ %s</b>

                    %s <b>–°—Ç–∞—Ç—É—Å:</b> %s
                    ‚≠ê <b>–ó–≤–µ–∑–¥—ã:</b> %d
                    üí∞ <b>–°—É–º–º–∞:</b> $%.2f
                    üìÖ <b>–°–æ–∑–¥–∞–Ω:</b> %s
                    """,
                    order.getFormattedOrderId(),
                    order.getStatusEmoji(),
                    order.getStatus().name(),
                    order.getStarPackage().getStars(),
                    order.getAmount(),
                    order.getCreatedAt().toString());

            return MessageUtils.createMessage(chatId, statusText);
        } else {
            return MessageUtils.createMessage(chatId,
                    "üìã –£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤.\n\nüí∞ –ù–∞–∂–º–∏—Ç–µ /start —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑!");
        }
    }

    private SendMessage handleCancelCommand(Long chatId, UserSession session) {
        userSessionService.clearUserSession(session.getUserId());
        return MessageUtils.createMessage(chatId,
                "‚ùå –¢–µ–∫—É—â–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.\n\nüè† –í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é: /start");
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –±–µ—Ç–∞-—Ñ—É–Ω–∫—Ü–∏–π (Feature Flags —É–¥–∞–ª–µ–Ω—ã - –≤—Å–µ–≥–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–æ)
     */
    private SendMessage handleBetaCommand(Long chatId, UserSession session) {
        String betaText = """
                üß™ <b>–ë–µ—Ç–∞-—Ñ—É–Ω–∫—Ü–∏–∏</b>

                ‚ú® –í—ã –ø–æ–ª—É—á–∏–ª–∏ –¥–æ—Å—Ç—É–ø –∫ –Ω–æ–≤—ã–º —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω—ã–º —Ñ—É–Ω–∫—Ü–∏—è–º!

                üî∏ –£–ª—É—á—à–µ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –∑–∞–∫–∞–∑–æ–≤
                üî∏ –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
                üî∏ –ë—ã—Å—Ç—Ä—ã–µ –ø–ª–∞—Ç–µ–∂–∏
                üî∏ –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞

                ‚ö†Ô∏è <i>–≠—Ç–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏</i>
                """;

        return MessageUtils.createMessage(chatId, betaText);
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–µ–º–∏—É–º-—Ñ—É–Ω–∫—Ü–∏–π (Feature Flags —É–¥–∞–ª–µ–Ω—ã - –≤—Å–µ–≥–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–æ)
     */
    private SendMessage handlePremiumCommand(Long chatId, UserSession session) {
        String premiumText = """
                üíé <b>–ü—Ä–µ–º–∏—É–º —Ñ—É–Ω–∫—Ü–∏–∏</b>

                üåü –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ VIP –∑–æ–Ω—É!

                ‚ö° –ú–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫–∞–∑–æ–≤
                üí∞ –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ —Å–∫–∏–¥–∫–∏ –¥–æ 30%
                üéÅ –ë–æ–Ω—É—Å–Ω—ã–µ –∑–≤–µ–∑–¥—ã –∑–∞ –∫–∞–∂–¥—É—é –ø–æ–∫—É–ø–∫—É
                üìû –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7
                üèÜ –î–æ—Å—Ç—É–ø –∫ –ª–∏–º–∏—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –ø–∞–∫–µ—Ç–∞–º

                ‚ú® <i>–í–∞—à —Å—Ç–∞—Ç—É—Å: VIP –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å</i>
                """;

        return MessageUtils.createMessage(chatId, premiumText);
    }

    private SendMessage handleTextMessage(String text, Long chatId, UserSession session) {
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        return switch (session.getState()) {
            case IDLE -> MessageUtils.createMessage(chatId,
                    "üëã –ü—Ä–∏–≤–µ—Ç! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –∏–ª–∏ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–º–æ—â–∏.");

            case SELECTING_PACKAGE -> MessageUtils.createMessage(chatId,
                    "ÔøΩ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø–∞–∫–µ—Ç –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤, –∏—Å–ø–æ–ª—å–∑—É—è –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é.");

            case CONFIRMING_ORDER -> MessageUtils.createMessage(chatId,
                    "‚è≥ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∑–∞–∫–∞–∑, –∏—Å–ø–æ–ª—å–∑—É—è –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é.");

            case AWAITING_PAYMENT -> MessageUtils.createMessage(chatId,
                    "ÔøΩ –û–∂–∏–¥–∞–µ–º –æ–ø–ª–∞—Ç—É. –í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.");

            case PAYMENT_PROCESSING -> MessageUtils.createMessage(chatId,
                    "‚öôÔ∏è –í–∞—à –ø–ª–∞—Ç–µ–∂ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...");

            case COMPLETED -> MessageUtils.createMessage(chatId,
                    "‚úÖ –í–∞—à –∑–∞–∫–∞–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –Ω–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞.");

            default -> MessageUtils.createMessage(chatId,
                    "ü§î –ù–µ –ø–æ–Ω–∏–º–∞—é. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–º–æ—â–∏.");
        };
    }

    // ============================================
    // === –ù–û–í–´–ï –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –ö–û–ú–ê–ù–î –ë–ê–õ–ê–ù–°–ê ===
    // ============================================

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /balance - –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     */
    private SendMessage handleBalanceCommand(Long chatId, UserSession session) {
        log.info("üí∞ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /balance –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {}", session.getUserId());

        try {
            UserBalanceEntity balance = balanceService.getOrCreateBalance(session.getUserId());
            String balanceMessage = MessageUtils.createBalanceInfoMessage(balance, session.getDisplayName());

            return MessageUtils.createMessageWithKeyboard(chatId, balanceMessage,
                    MessageUtils.createBalanceMenuKeyboard());

        } catch (Exception e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}: {}",
                    session.getUserId(), e.getMessage(), e);
            return MessageUtils.createMessage(chatId,
                    "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /topup - –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å
     */
    private SendMessage handleTopupCommand(Long chatId, UserSession session) {
        log.info("üí≥ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /topup –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {}", session.getUserId());

        try {
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Å—Å–∏–∏
            userSessionService.updateSessionState(session.getUserId(), UserSession.SessionState.TOPPING_UP_BALANCE);

            UserBalanceEntity balance = balanceService.getOrCreateBalance(session.getUserId());
            String topupMessage = MessageUtils.createTopupMessage(balance);

            return MessageUtils.createMessageWithKeyboard(chatId, topupMessage,
                    MessageUtils.createTopupKeyboard());

        } catch (Exception e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}: {}",
                    session.getUserId(), e.getMessage(), e);
            return MessageUtils.createMessage(chatId,
                    "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /history - –ø–æ–∫–∞–∑–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
     */
    private SendMessage handleHistoryCommand(Long chatId, UserSession session) {
        log.info("üìä –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /history –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {}", session.getUserId());

        try {
            // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
            List<BalanceTransactionEntity> history = balanceService.getBalanceHistory(session.getUserId(), 10);
            String historyMessage = MessageUtils.createBalanceHistoryMessage(history, session.getDisplayName());

            return MessageUtils.createMessageWithKeyboard(chatId, historyMessage,
                    MessageUtils.createBalanceHistoryKeyboard());

        } catch (Exception e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏—Å—Ç–æ—Ä–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}: {}",
                    session.getUserId(), e.getMessage(), e);
            return MessageUtils.createMessage(chatId,
                    "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏—Å—Ç–æ—Ä–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
        }
    }
}
