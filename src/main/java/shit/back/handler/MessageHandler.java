package shit.back.handler;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.Message;
import org.telegram.telegrambots.meta.api.objects.User;
import shit.back.model.UserSession;
import shit.back.model.Order;
import shit.back.service.PriceService;
import shit.back.service.UserSessionService;
import shit.back.utils.MessageUtils;

import java.util.Optional;

@Component
public class MessageHandler {
    
    @Autowired
    private UserSessionService userSessionService;
    
    @Autowired
    private PriceService priceService;
    
    public SendMessage handleMessage(Message message) {
        String text = message.getText();
        User user = message.getFrom();
        Long chatId = message.getChatId();
        
        // –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –ø–æ–ª—É—á–∞–µ–º —Å–µ—Å—Å–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        UserSession session = userSessionService.getOrCreateSession(
            user.getId(),
            user.getUserName(),
            user.getFirstName(),
            user.getLastName()
        );
        
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
        if (text.startsWith("/")) {
            return handleCommand(text, chatId, session);
        }
        
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        return handleTextMessage(text, chatId, session);
    }
    
    private SendMessage handleCommand(String command, Long chatId, UserSession session) {
        return switch (command.toLowerCase()) {
            case "/start" -> handleStartCommand(chatId, session);
            case "/help" -> handleHelpCommand(chatId);
            case "/prices" -> handlePricesCommand(chatId);
            case "/status" -> handleStatusCommand(chatId, session);
            case "/cancel" -> handleCancelCommand(chatId, session);
            default -> MessageUtils.createMessage(chatId, 
                "‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.");
        };
    }
    
    private SendMessage handleStartCommand(Long chatId, UserSession session) {
        String welcomeText = MessageUtils.formatWelcomeMessage(session.getDisplayName());
        return MessageUtils.createMessageWithKeyboard(chatId, welcomeText, 
            MessageUtils.createMainMenuKeyboard());
    }
    
    private SendMessage handleHelpCommand(Long chatId) {
        return MessageUtils.createMessage(chatId, MessageUtils.formatHelpMessage());
    }
    
    private SendMessage handlePricesCommand(Long chatId) {
        String pricesText = MessageUtils.formatPricesMessage(priceService.getAllPackages());
        return MessageUtils.createMessageWithKeyboard(chatId, pricesText,
            MessageUtils.createPackageSelectionKeyboard(priceService.getAllPackages()));
    }
    
    private SendMessage handleStatusCommand(Long chatId, UserSession session) {
        Optional<Order> activeOrder = userSessionService.getUserActiveOrder(session.getUserId());
        
        if (activeOrder.isPresent()) {
            Order order = activeOrder.get();
            String statusText = String.format("""
                üìã <b>–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ %s</b>
                
                %s <b>–°—Ç–∞—Ç—É—Å:</b> %s
                ‚≠ê <b>–ó–≤–µ–∑–¥—ã:</b> %d
                üí∞ <b>–°—É–º–º–∞:</b> $%.2f
                üìÖ <b>–°–æ–∑–¥–∞–Ω:</b> %s
                """,
                order.getFormattedOrderId(),
                order.getStatusEmoji(),
                order.getStatus().name(),
                order.getStarPackage().getStars(),
                order.getAmount(),
                order.getCreatedAt().toString()
            );
            
            return MessageUtils.createMessage(chatId, statusText);
        } else {
            return MessageUtils.createMessage(chatId, 
                "üìã –£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤.\n\nüí∞ –ù–∞–∂–º–∏—Ç–µ /start —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑!");
        }
    }
    
    private SendMessage handleCancelCommand(Long chatId, UserSession session) {
        userSessionService.clearUserSession(session.getUserId());
        return MessageUtils.createMessage(chatId, 
            "‚ùå –¢–µ–∫—É—â–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.\n\nüè† –í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é: /start");
    }
    
    private SendMessage handleTextMessage(String text, Long chatId, UserSession session) {
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        return switch (session.getState()) {
            case IDLE -> MessageUtils.createMessage(chatId, 
                "üëã –ü—Ä–∏–≤–µ—Ç! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –∏–ª–∏ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–º–æ—â–∏.");
            
            case SELECTING_PACKAGE -> MessageUtils.createMessage(chatId,
                "üì¶ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø–∞–∫–µ—Ç –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤, –∏—Å–ø–æ–ª—å–∑—É—è –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é.");
            
            case CONFIRMING_ORDER -> MessageUtils.createMessage(chatId,
                "‚è≥ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∑–∞–∫–∞–∑, –∏—Å–ø–æ–ª—å–∑—É—è –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é.");
            
            case AWAITING_PAYMENT -> MessageUtils.createMessage(chatId,
                "üí≥ –û–∂–∏–¥–∞–µ–º –æ–ø–ª–∞—Ç—É. –í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.");
            
            case PAYMENT_PROCESSING -> MessageUtils.createMessage(chatId,
                "‚öôÔ∏è –í–∞—à –ø–ª–∞—Ç–µ–∂ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...");
            
            case COMPLETED -> MessageUtils.createMessage(chatId,
                "‚úÖ –í–∞—à –∑–∞–∫–∞–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –Ω–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞.");
            
            default -> MessageUtils.createMessage(chatId,
                "ü§î –ù–µ –ø–æ–Ω–∏–º–∞—é. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–º–æ—â–∏.");
        };
    }
}
