package shit.back.handler;

import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.methods.BotApiMethod;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.methods.updatingmessages.EditMessageText;
import org.telegram.telegrambots.meta.api.objects.CallbackQuery;
import org.telegram.telegrambots.meta.api.objects.Message;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import shit.back.telegram.TelegramService;
import shit.back.telegram.commands.InitiateStarPurchaseCommand;
import shit.back.telegram.commands.ProcessCustomAmountCommand;
import shit.back.telegram.commands.TopupBalanceCommand;
import shit.back.telegram.dto.TelegramResponse;
import shit.back.telegram.queries.ShowBalanceQuery;
import shit.back.telegram.queries.ShowPurchaseHistoryQuery;
import shit.back.telegram.queries.ShowWelcomeCardQuery;
import shit.back.service.UserSessionUnifiedService;
import shit.back.service.TelegramMessageCacheService;
import shit.back.model.UserSession;
import shit.back.application.balance.service.BalanceApplicationServiceV2;
import shit.back.application.balance.dto.request.OperationRequest;
import shit.back.application.balance.common.Result;
import shit.back.application.balance.dto.response.BalanceResponse;

import java.math.BigDecimal;
import java.util.Optional;
import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.ConcurrentMap;

/**
 * –§–∞—Å–∞–¥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ Telegram —Å–æ–æ–±—â–µ–Ω–∏–π –∏ callback-–æ–≤
 * 
 * –ö–æ–æ—Ä–¥–∏–Ω–∏—Ä—É–µ—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ –º–µ–∂–¥—É Telegram Bot API –∏ TelegramService
 */
@Component
@Slf4j
public class TelegramHandlerFacade {

    @Autowired
    private TelegramService telegramService;

    @Autowired
    private TelegramMessageCacheService messageCacheService;

    @Autowired
    private UserSessionUnifiedService sessionService;

    @Autowired
    private BalanceApplicationServiceV2 balanceService;

    // –ö—ç—à –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö—Å—è –æ–ø–µ—Ä–∞—Ü–∏–π
    private final ConcurrentMap<String, Long> operationCache = new ConcurrentHashMap<>();
    private static final long OPERATION_CACHE_TTL_MS = 5000; // 5 —Å–µ–∫—É–Ω–¥

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
     */
    public BotApiMethod<?> processMessage(Message message) {
        try {
            Long userId = message.getFrom().getId();
            String text = message.getText();

            log.info("üì® –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {} —Å —Ç–µ–∫—Å—Ç–æ–º: '{}'", userId, text);

            if (text == null || text.trim().isEmpty()) {
                return createErrorMessage(message.getChatId(), "–ü–æ–ª—É—á–µ–Ω–æ –ø—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ");
            }

            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
            if (text.startsWith("/start")) {
                return processStartCommand(userId, message.getChatId());
            } else if (text.startsWith("/balance")) {
                return processBalanceCommand(userId, message.getChatId());
            } else if (text.startsWith("/help")) {
                return processHelpCommand(message.getChatId());
            } else {
                // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
                return processTextMessage(userId, message.getChatId(), text);
            }

        } catch (Exception e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {}", e.getMessage(), e);
            return createErrorMessage(message.getChatId(), "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è");
        }
    }

    /**
     * –ò–°–ü–†–ê–í–õ–ï–ù–û: –û–±—Ä–∞–±–æ—Ç–∫–∞ callback'–æ–≤ —Å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º –∏ –∏–¥–µ–º–ø–æ—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å—é
     */
    public BotApiMethod<?> processCallbackQuery(CallbackQuery callbackQuery) {
        try {
            Long userId = callbackQuery.getFrom().getId();
            String callbackData = callbackQuery.getData();
            Long chatId = callbackQuery.getMessage().getChatId();
            Integer messageId = callbackQuery.getMessage().getMessageId();

            log.info("üîÑ –û–±—Ä–∞–±–æ—Ç–∫–∞ callback –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {} —Å –¥–∞–Ω–Ω—ã–º–∏: '{}'", userId, callbackData);

            // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–¥–µ–º–ø–æ—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏ –æ–ø–µ—Ä–∞—Ü–∏–π
            String operationKey = userId + ":" + callbackData;
            if (isRecentOperation(operationKey)) {
                log.debug("‚ö†Ô∏è –î—É–±–ª–∏—Ä—É—é—â–∞—è—Å—è –æ–ø–µ—Ä–∞—Ü–∏—è –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞: {} - –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º", operationKey);
                return null; // –ù–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç
            }

            // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: Fail-fast –≤–∞–ª–∏–¥–∞—Ü–∏—è —Å–µ—Å—Å–∏–∏
            ensureUserSession(userId, callbackQuery.getFrom());

            TelegramResponse response = processCallbackDataOptimized(userId, callbackData);

            if (response.isSuccessful()) {
                EditMessageText editMessage = convertResponseToEditMessage(chatId, messageId, response);

                // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π
                InlineKeyboardMarkup keyboard = response.getKeyboard();
                if (!messageCacheService.isMessageChanged(chatId, messageId, response.getMessage(), keyboard)) {
                    log.debug("üìù –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {} - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É", userId);
                    return null;
                }

                // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—É—é –æ–ø–µ—Ä–∞—Ü–∏—é
                registerOperation(operationKey);
                return editMessage;
            } else {
                return createErrorMessage(chatId, response.getErrorMessage());
            }

        } catch (Exception e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ callback: {}", e.getMessage(), e);
            return createErrorMessage(callbackQuery.getMessage().getChatId(),
                    "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ callback");
        }
    }

    /**
     * –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –û–±—Ä–∞–±–æ—Ç–∫–∞ callback'–æ–≤ —Å –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º —Å–æ–∑–¥–∞–Ω–∏–µ–º
     * —Å–µ—Å—Å–∏–∏
     */
    private TelegramResponse processCallbackData(Long userId, String callbackData) {
        log.info("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –ü–æ–ª—É—á–µ–Ω callback '{}' –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {}", callbackData, userId);

        // ROOT CAUSE –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–µ–º/–ø–æ–ª—É—á–∞–µ–º —Å–µ—Å—Å–∏—é –¥–ª—è –í–°–ï–•
        // callback'–æ–≤
        try {
            UserSession session = sessionService.getOrCreateSession(userId, null, null, null);
            log.info("‚úÖ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –°–µ—Å—Å–∏—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}. –°–æ—Å—Ç–æ—è–Ω–∏–µ: {}, PaymentType: {}",
                    userId, session.getState(), session.getPaymentType());
        } catch (Exception e) {
            log.error("‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å/–ø–æ–ª—É—á–∏—Ç—å —Å–µ—Å—Å–∏—é –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}: {}",
                    userId, e.getMessage(), e);
            return TelegramResponse.error("–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–µ—Å—Å–∏–∏");
        }

        // –î–ò–ê–ì–ù–û–°–¢–ò–ß–ï–°–ö–ò–ô –õ–û–ì: –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –≤—Å–µ –≤—Ö–æ–¥—è—â–∏–µ callback'—ã
        log.info("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É callback'–∞ –≤ switch statement");

        // üîç –î–ò–ê–ì–ù–û–°–¢–ò–ß–ï–°–ö–ò–ô –õ–û–ì #2: –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –≤—Å–µ –≤—Ö–æ–¥—è—â–∏–µ callback'—ã
        log.info("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê CALLBACK: –ù–∞—á–∏–Ω–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É callback '{}' –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}", callbackData, userId);

        switch (callbackData) {
            case "refresh_balance":
                log.info("üí∞ –û–±—Ä–∞–±–æ—Ç–∫–∞ refresh_balance –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {}", userId);
                return telegramService.execute(new ShowBalanceQuery(userId));

            case "show_balance":
                log.info("üí∞ –û–±—Ä–∞–±–æ—Ç–∫–∞ show_balance –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {}", userId);
                return telegramService.execute(new ShowBalanceQuery(userId, true));

            // –ü–û–ü–û–õ–ù–ï–ù–ò–ï –ë–ê–õ–ê–ù–°–ê - –Ω–∞—á–∞–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ (–ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã)
            case "topup_balance":
                log.info("üí≥ –û–±—Ä–∞–±–æ—Ç–∫–∞ topup_balance - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã");
                return telegramService.execute(new TopupBalanceCommand(userId, (BigDecimal) null));

            // –í–´–ë–û–† –°–ü–û–°–û–ë–ê –û–ü–õ–ê–¢–´
            case "payment_crypto":
                log.info("ü™ô –û–±—Ä–∞–±–æ—Ç–∫–∞ payment_crypto - –ø–µ—Ä–µ—Ö–æ–¥ –∫ –≤—ã–±–æ—Ä—É —Å—É–º–º—ã");
                return telegramService.execute(new TopupBalanceCommand(userId, (String) null, "TON"));
            case "payment_yoomoney":
                log.info("üí≥ –û–±—Ä–∞–±–æ—Ç–∫–∞ payment_yoomoney - –ø–µ—Ä–µ—Ö–æ–¥ –∫ –≤—ã–±–æ—Ä—É —Å—É–º–º—ã");
                return telegramService.execute(new TopupBalanceCommand(userId, (String) null, "YOOKASSA"));
            case "payment_uzs":
                log.info("üèõÔ∏è –û–±—Ä–∞–±–æ—Ç–∫–∞ payment_uzs - –ø–µ—Ä–µ—Ö–æ–¥ –∫ –≤—ã–±–æ—Ä—É —Å—É–º–º—ã");
                log.info("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê CALLBACK: –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã 'UZS_PAYMENT' –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}", userId);
                return telegramService.execute(new TopupBalanceCommand(userId, (String) null, "UZS_PAYMENT"));

            // –ü–†–ï–î–£–°–¢–ê–ù–û–í–õ–ï–ù–ù–´–ï –°–£–ú–ú–´ –ü–û–ü–û–õ–ù–ï–ù–ò–Ø
            case "topup_amount_10":
                return handleTopupAmount(userId, "10");
            case "topup_amount_25":
                return handleTopupAmount(userId, "25");
            case "topup_amount_50":
                return handleTopupAmount(userId, "50");
            case "topup_amount_100":
                return handleTopupAmount(userId, "100");
            case "topup_amount_250":
                return handleTopupAmount(userId, "250");
            case "topup_amount_500":
                return handleTopupAmount(userId, "500");

            // –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨–°–ö–ê–Ø –°–£–ú–ú–ê
            case "custom_amount":
                log.info("‚úèÔ∏è –û–±—Ä–∞–±–æ—Ç–∫–∞ custom_amount - –ø–µ—Ä–µ—Ö–æ–¥ –∫ –≤–≤–æ–¥—É —Å—É–º–º—ã");
                return processCustomAmountStart(userId);

            // üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–†–û–ë–õ–ï–ú–´ #2: –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ confirm_topup_*
            case "confirm_topup_10":
                log.info("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê CALLBACK: –ù–∞–π–¥–µ–Ω confirm_topup_10 - —ç—Ç–æ –±—ã–ª–∞ –ü–†–û–ë–õ–ï–ú–ê #2!");
                return handleConfirmTopup(userId, "10");
            case "confirm_topup_25":
                log.info("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê CALLBACK: –ù–∞–π–¥–µ–Ω confirm_topup_25");
                return handleConfirmTopup(userId, "25");
            case "confirm_topup_50":
                log.info("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê CALLBACK: –ù–∞–π–¥–µ–Ω confirm_topup_50");
                return handleConfirmTopup(userId, "50");
            case "confirm_topup_100":
                log.info("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê CALLBACK: –ù–∞–π–¥–µ–Ω confirm_topup_100");
                return handleConfirmTopup(userId, "100");
            case "confirm_topup_250":
                log.info("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê CALLBACK: –ù–∞–π–¥–µ–Ω confirm_topup_250");
                return handleConfirmTopup(userId, "250");
            case "confirm_topup_500":
                log.info("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê CALLBACK: –ù–∞–π–¥–µ–Ω confirm_topup_500 - —ç—Ç–æ –±—ã–ª–∞ –ü–†–û–ë–õ–ï–ú–ê #2!");
                return handleConfirmTopup(userId, "500");

            // üîç –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–†–û–ë–õ–ï–ú–´ #2: –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è
            // –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Å—É–º–º
            case "confirm_topup_1000":
                log.info("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê CALLBACK: –ù–∞–π–¥–µ–Ω confirm_topup_1000 - –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫");
                return handleConfirmTopup(userId, "1000");
            case "confirm_topup_2000":
                log.info("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê CALLBACK: –ù–∞–π–¥–µ–Ω confirm_topup_2000 - –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫");
                return handleConfirmTopup(userId, "2000");
            case "confirm_topup_custom":
                log.info(
                        "üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê CALLBACK: –ù–∞–π–¥–µ–Ω confirm_topup_custom - –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π —Å—É–º–º—ã");
                return handleConfirmTopupCustom(userId);

            // –û–¢–ú–ï–ù–ê –ü–û–ü–û–õ–ù–ï–ù–ò–Ø
            case "cancel_topup":
                log.info("‚ùå –û–±—Ä–∞–±–æ—Ç–∫–∞ cancel_topup - –æ—Ç–º–µ–Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è");
                return handleCancelTopup(userId);

            case "show_history":
                log.info("üìä –û–±—Ä–∞–±–æ—Ç–∫–∞ show_history –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {}", userId);
                return telegramService.execute(new ShowPurchaseHistoryQuery(userId));

            case "buy_stars":
                log.info("‚≠ê –û–±—Ä–∞–±–æ—Ç–∫–∞ buy_stars –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {}", userId);
                return telegramService.execute(new InitiateStarPurchaseCommand(userId));

            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤ –∑–≤–µ–∑–¥: buy_stars_500_4.50
            case "transfer_funds":
                log.info("üí∏ –û–±—Ä–∞–±–æ—Ç–∫–∞ transfer_funds –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {}", userId);
                return TelegramResponse.error("–§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–≤–æ–¥–∞ —Å—Ä–µ–¥—Å—Ç–≤ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞");

            default:
                // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤ –∑–≤–µ–∑–¥: buy_stars_500_4.50
                if (callbackData.startsWith("buy_stars_") && callbackData.contains("_")
                        && !callbackData.equals("buy_stars")) {
                    return handleBuyStarsPackage(userId, callbackData);
                }

                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–º callback –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
                if (callbackData.startsWith("confirm_topup_")) {
                    String amount = callbackData.substring("confirm_topup_".length());
                    log.info("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê CALLBACK: –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π confirm_topup –¥–ª—è —Å—É–º–º—ã: {}", amount);
                    return handleConfirmTopup(userId, amount);
                }

                // –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –û–±—Ä–∞–±–æ—Ç–∫–∞ process_payment_* callbacks
                if (callbackData.startsWith("process_payment_")) {
                    String amount = callbackData.substring("process_payment_".length());
                    log.info("üí≥ –û–±—Ä–∞–±–æ—Ç–∫–∞ process_payment –¥–ª—è —Å—É–º–º—ã: {}", amount);
                    return handleProcessPayment(userId, amount);
                }

                // –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –û–±—Ä–∞–±–æ—Ç–∫–∞ payment_completed_* callbacks
                if (callbackData.startsWith("payment_completed_")) {
                    String amount = callbackData.substring("payment_completed_".length());
                    log.info("‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ payment_completed –¥–ª—è —Å—É–º–º—ã: {}", amount);
                    return handlePaymentCompleted(userId, amount);
                }

                // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–∫—É–ø–∫–∏ –∑–≤–µ–∑–¥: proceed_purchase_1000
                if (callbackData.startsWith("proceed_purchase_")) {
                    return handleProceedPurchase(userId, callbackData);
                }

                log.warn("üö® –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê CALLBACK: –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π callback '{}' - –ù–ï –ù–ê–ô–î–ï–ù –æ–±—Ä–∞–±–æ—Ç—á–∏–∫!", callbackData);
                return TelegramResponse.error("‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π callback: " + callbackData);
        }
    }

    /**
     * üîç –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–†–û–ë–õ–ï–ú–´ #2: –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π —Å—É–º–º—ã
     */
    private TelegramResponse handleConfirmTopupCustom(Long userId) {
        log.info("‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π —Å—É–º–º—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}", userId);
        try {
            // –ü–æ–ª—É—á–∞–µ–º —Å–µ—Å—Å–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤–≤–µ–¥–µ–Ω–Ω–æ–π —Å—É–º–º—ã
            Optional<UserSession> sessionOpt = sessionService.getSession(userId);
            if (sessionOpt.isPresent()) {
                UserSession session = sessionOpt.get();
                // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è —Å—É–º–º–∞ —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ –æ–¥–Ω–æ–º –∏–∑ –ø–æ–ª–µ–π —Å–µ—Å—Å–∏–∏
                // –ò–ª–∏ –ø–æ–ª—É—á–∞–µ–º –∏–∑ –∫—ç—à–∞ –∫–æ–º–∞–Ω–¥—ã ProcessCustomAmountCommand
                log.info("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π —Å—É–º–º—ã –¥–ª—è —Å–µ—Å—Å–∏–∏: {}",
                        session.getState());

                // –í –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –∫ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–º—É –æ–±—Ä–∞–±–æ—Ç—á–∏–∫—É —Å –¥–µ—Ñ–æ–ª—Ç–Ω–æ–π —Å—É–º–º–æ–π
                // –≠—Ç–æ –º–æ–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å, –¥–æ–±–∞–≤–∏–≤ —Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π —Å—É–º–º—ã –≤ —Å–µ—Å—Å–∏—é
                return handleConfirmTopup(userId, "100"); // –í—Ä–µ–º–µ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ
            }

            return TelegramResponse.error("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π —Å—É–º–º–µ");
        } catch (Exception e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π —Å—É–º–º—ã: {}", e.getMessage());
            return TelegramResponse.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π —Å—É–º–º—ã: " + e.getMessage());
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
     */
    private BotApiMethod<?> processStartCommand(Long userId, Long chatId) {
        log.info("üöÄ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {}", userId);

        TelegramResponse response = telegramService.execute(new ShowWelcomeCardQuery(userId));

        if (response.isSuccessful()) {
            return convertResponseToSendMessage(chatId, response);
        } else {
            return createErrorMessage(chatId, "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ä—Ç–æ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏");
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /balance
     */
    private BotApiMethod<?> processBalanceCommand(Long userId, Long chatId) {
        log.info("üí∞ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /balance –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {}", userId);

        TelegramResponse response = telegramService.execute(new ShowBalanceQuery(userId, true, true));

        if (response.isSuccessful()) {
            return convertResponseToSendMessage(chatId, response);
        } else {
            return createErrorMessage(chatId, "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞");
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /help
     */
    private BotApiMethod<?> processHelpCommand(Long chatId) {
        log.info("‚ùì –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /help");

        String helpText = """
                ü§ñ *Telegram Star Manager Bot*

                –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
                /start - –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –∏ –ø—Ä–æ—Å–º–æ—Ç—Ä –±–∞–ª–∞–Ω—Å–∞
                /balance - –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–∞–ª–∞–Ω—Å–µ
                /help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞

                –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ –¥–ª—è:
                ‚Ä¢ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
                ‚Ä¢ –ü–æ–∫—É–ø–∫–∏ –∑–≤–µ–∑–¥
                ‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏—Å—Ç–æ—Ä–∏–∏ –æ–ø–µ—Ä–∞—Ü–∏–π
                """;

        return SendMessage.builder()
                .chatId(chatId.toString())
                .text(helpText)
                .parseMode("Markdown")
                .build();
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
     */
    private BotApiMethod<?> processTextMessage(Long userId, Long chatId, String text) {
        log.info("üí¨ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: '{}' –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {}", text, userId);

        try {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            Optional<UserSession> sessionOpt = sessionService.getSession(userId);
            if (sessionOpt.isPresent()) {
                UserSession session = sessionOpt.get();

                // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –≤–≤–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π —Å—É–º–º—ã
                if (session.getState() == UserSession.SessionState.ENTERING_CUSTOM_AMOUNT) {
                    log.info("üî¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {} –≤–≤–æ–¥–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫—É—é —Å—É–º–º—É: '{}'", userId, text);

                    // –°–æ–∑–¥–∞–µ–º –∫–æ–º–∞–Ω–¥—É –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π —Å—É–º–º—ã
                    ProcessCustomAmountCommand command = new ProcessCustomAmountCommand(userId, text, "topup");
                    TelegramResponse response = telegramService.execute(command);

                    if (response.isSuccessful()) {
                        // –ü–æ–ª—É—á–∞–µ–º —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏–∑ —Å–µ—Å—Å–∏–∏ –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—é
                        String paymentMethod = getPaymentMethodFromSession(userId);
                        BigDecimal amount = command.getParsedAmount();

                        // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—é –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è —Å –≤–≤–µ–¥–µ–Ω–Ω–æ–π —Å—É–º–º–æ–π
                        TelegramResponse topupResponse = telegramService.execute(
                                new TopupBalanceCommand(userId, amount.toString(), paymentMethod));

                        return convertResponseToSendMessage(chatId, topupResponse);
                    } else {
                        return SendMessage.builder()
                                .chatId(chatId.toString())
                                .text(response.getErrorMessage())
                                .build();
                    }
                }
            }

            // –ï—Å–ª–∏ –Ω–µ –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ - —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            return SendMessage.builder()
                    .chatId(chatId.toString())
                    .text("–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏.")
                    .build();

        } catch (Exception e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}: {}", userId, e.getMessage(), e);
            return SendMessage.builder()
                    .chatId(chatId.toString())
                    .text("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
                    .build();
        }
    }

    /**
     * –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è TelegramResponse –≤ SendMessage
     * –ò–°–ü–†–ê–í–õ–ï–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ—Ç parseMode –∏–∑ response, –¥–æ–±–∞–≤–ª–µ–Ω—ã –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–µ –ª–æ–≥–∏
     */
    private SendMessage convertResponseToSendMessage(Long chatId, TelegramResponse response) {
        String parseMode = response.getParseMode();
        log.info("üîç DEBUG: –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º parseMode = {} –¥–ª—è SendMessage. –¢–µ–∫—Å—Ç: {}",
                parseMode, response.getMessage().substring(0, Math.min(50, response.getMessage().length())) + "...");

        SendMessage.SendMessageBuilder builder = SendMessage.builder()
                .chatId(chatId.toString())
                .text(response.getMessage())
                .parseMode(parseMode);

        if (response.hasKeyboard()) {
            InlineKeyboardMarkup keyboard = convertToInlineKeyboard(response);
            if (keyboard != null && keyboard.getKeyboard() != null && !keyboard.getKeyboard().isEmpty()) {
                builder.replyMarkup(keyboard);
                log.debug("‚úÖ –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –∫ SendMessage");
            } else {
                log.debug("‚ÑπÔ∏è –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø—É—Å—Ç–∞—è –∏–ª–∏ null, –Ω–µ –¥–æ–±–∞–≤–ª—è–µ–º replyMarkup");
            }
        }

        return builder.build();
    }

    /**
     * –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è TelegramResponse –≤ EditMessageText
     * –ò–°–ü–†–ê–í–õ–ï–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ—Ç parseMode –∏–∑ response, –¥–æ–±–∞–≤–ª–µ–Ω—ã –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–µ –ª–æ–≥–∏
     */
    private EditMessageText convertResponseToEditMessage(Long chatId, Integer messageId, TelegramResponse response) {
        String parseMode = response.getParseMode();
        log.info("üîç DEBUG: –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º parseMode = {} –¥–ª—è EditMessageText. –¢–µ–∫—Å—Ç: {}",
                parseMode, response.getMessage().substring(0, Math.min(50, response.getMessage().length())) + "...");

        EditMessageText.EditMessageTextBuilder builder = EditMessageText.builder()
                .chatId(chatId.toString())
                .messageId(messageId)
                .text(response.getMessage())
                .parseMode(parseMode);

        if (response.hasKeyboard()) {
            InlineKeyboardMarkup keyboard = convertToInlineKeyboard(response);
            if (keyboard != null && keyboard.getKeyboard() != null && !keyboard.getKeyboard().isEmpty()) {
                builder.replyMarkup(keyboard);
                log.debug("‚úÖ –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –∫ EditMessageText");
            } else {
                log.debug("‚ÑπÔ∏è –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø—É—Å—Ç–∞—è –∏–ª–∏ null, –Ω–µ –¥–æ–±–∞–≤–ª—è–µ–º replyMarkup");
            }
        }

        return builder.build();
    }

    /**
     * –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –∏–∑ TelegramResponse
     * –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü—Ä–∞–≤–∏–ª—å–Ω–æ –∏–∑–≤–ª–µ–∫–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏–∑ response
     */
    private InlineKeyboardMarkup convertToInlineKeyboard(TelegramResponse response) {
        if (response == null) {
            log.warn("‚ö†Ô∏è TelegramResponse is null, –Ω–µ –º–æ–∂–µ–º –∏–∑–≤–ª–µ—á—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É");
            return null;
        }

        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ getKeyboard() –∏–∑ TelegramResponse
        InlineKeyboardMarkup keyboard = response.getKeyboard();
        if (keyboard != null) {
            log.debug("‚úÖ –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —É—Å–ø–µ—à–Ω–æ –∏–∑–≤–ª–µ—á–µ–Ω–∞ –∏–∑ response.getKeyboard()");
            return keyboard;
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ data –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
        Object data = response.getData();
        if (data instanceof InlineKeyboardMarkup) {
            log.debug("‚úÖ –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –Ω–∞–π–¥–µ–Ω–∞ –≤ response.getData()");
            return (InlineKeyboardMarkup) data;
        }

        log.debug("‚ÑπÔ∏è –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ response, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º null");
        return null;
    }

    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ
     */
    private SendMessage createErrorMessage(Long chatId, String errorMessage) {
        return SendMessage.builder()
                .chatId(chatId.toString())
                .text("‚ùå " + errorMessage)
                .build();
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–π —Å—É–º–º—ã –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
     */
    private TelegramResponse handleTopupAmount(Long userId, String amount) {
        log.info("üí∞ –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–π —Å—É–º–º—ã {} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}", amount, userId);
        try {
            // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏–∑ —Å–µ—Å—Å–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            String paymentMethod = getPaymentMethodFromSession(userId);
            return telegramService.execute(new TopupBalanceCommand(userId, amount, paymentMethod));
        } catch (Exception e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å—É–º–º—ã {}: {}", amount, e.getMessage());
            return TelegramResponse.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å—É–º–º—ã: " + e.getMessage());
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞—á–∞–ª–∞ –≤–≤–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π —Å—É–º–º—ã
     */
    private TelegramResponse processCustomAmountStart(Long userId) {
        log.info("‚úèÔ∏è –ù–∞—á–∞–ª–æ –≤–≤–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π —Å—É–º–º—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}", userId);
        try {
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Å—Å–∏–∏ –Ω–∞ –æ–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞ —Å—É–º–º—ã
            sessionService.updateSessionState(userId, UserSession.SessionState.ENTERING_CUSTOM_AMOUNT);

            return TelegramResponse.builder()
                    .successful(true)
                    .message("üí° –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä: 100 –∏–ª–∏ 50.25)\n\n" +
                            "‚ö†Ô∏è –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: 0.01\n" +
                            "üìä –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: 1,000,000")
                    .uiType("CUSTOM_AMOUNT_INPUT")
                    .build();
        } catch (Exception e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞—Ü–∏–∏ –≤–≤–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π —Å—É–º–º—ã: {}", e.getMessage());
            return TelegramResponse.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –∫ –≤–≤–æ–¥—É —Å—É–º–º—ã");
        }
    }

    /**
     * –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–†–û–ë–õ–ï–ú–´ #2: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã –∏–∑ —Å–µ—Å—Å–∏–∏
     */
    private String getPaymentMethodFromSession(Long userId) {
        try {
            Optional<UserSession> sessionOpt = sessionService.getSession(userId);
            if (sessionOpt.isPresent()) {
                UserSession session = sessionOpt.get();
                String paymentType = session.getPaymentType();
                if (paymentType != null && !paymentType.trim().isEmpty()) {
                    log.debug("üîç –ù–∞–π–¥–µ–Ω —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã: {} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}", paymentType, userId);
                    return paymentType;
                }
            }

            log.debug("üîç –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–µ—Å—Å–∏–∏, –∏—Å–ø–æ–ª—å–∑—É–µ–º DEFAULT –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}", userId);
            return "DEFAULT";
        } catch (Exception e) {
            log.warn("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã –∏–∑ —Å–µ—Å—Å–∏–∏: {}", e.getMessage());
            return "DEFAULT";
        }
    }

    /**
     * –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º
     * –î–†–£–ì–û–ï —Å–æ–æ–±—â–µ–Ω–∏–µ
     */
    private TelegramResponse handleConfirmTopup(Long userId, String amount) {
        log.info("‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è —Å—É–º–º—ã {} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}", amount, userId);
        try {
            // –ü–æ–ª—É—á–∞–µ–º —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏–∑ —Å–µ—Å—Å–∏–∏
            String paymentMethod = getPaymentMethodFromSession(userId);

            // –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –í–º–µ—Å—Ç–æ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ
            // –Ω–∞—á–∞–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
            String message = String.format("""
                    üîÑ <b>–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–ª–∞—Ç–µ–∂–∞...</b>

                    üí∞ <b>–°—É–º–º–∞:</b> %s USD
                    üí≥ <b>–°–ø–æ—Å–æ–±:</b> %s
                    ‚è±Ô∏è <b>–°—Ç–∞—Ç—É—Å:</b> –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –æ–ø–ª–∞—Ç–µ

                    üîó –ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –¥–ª—è –æ–ø–ª–∞—Ç—ã –∏–ª–∏ –¥–æ–∂–¥–∏—Ç–µ—Å—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π
                    """,
                    amount,
                    getPaymentMethodDisplayName(paymentMethod));

            // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Å—Å–∏–∏ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–ª–∞—Ç–µ–∂–∞
            sessionService.updateSessionState(userId, UserSession.SessionState.PAYMENT_PROCESSING);

            // –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —Å—Å—ã–ª–∫–æ–π –Ω–∞ –æ–ø–ª–∞—Ç—É
            String processPaymentCallback = "process_payment_" + amount;
            var keyboard = new shit.back.telegram.ui.builder.TelegramKeyboardBuilder()
                    .addButton("üí≥ –ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ", processPaymentCallback)
                    .addButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", "cancel_topup")
                    .newRow()
                    .addButton("üîô –ö –±–∞–ª–∞–Ω—Å—É", "show_balance")
                    .build();

            return TelegramResponse.builder()
                    .successful(true)
                    .message(message)
                    .uiType("PAYMENT_PROCESSING")
                    .data(keyboard)
                    .build();

        } catch (Exception e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è: {}", e.getMessage());
            return TelegramResponse.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è: " + e.getMessage());
        }
    }

    /**
     * –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–≥–æ –∏–º–µ–Ω–∏ —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã
     * (–¥—É–±–ª–∏—Ä—É–µ–º –∏–∑ TopupBalanceCommandHandler)
     */
    private String getPaymentMethodDisplayName(String paymentMethod) {
        if (paymentMethod == null) {
            return "–ù–µ –≤—ã–±—Ä–∞–Ω";
        }

        return switch (paymentMethod.toLowerCase()) {
            case "yoomoney", "payment_yoomoney", "yookassa" -> "üí≥ YooMoney";
            case "crypto", "payment_crypto", "ton" -> "‚Çø –ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞";
            case "uzs", "payment_uzs", "uzs_payment" -> "üí≥ UZS –∫–∞—Ä—Ç–∞";
            default -> "üí≥ –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã";
        };
    }

    /**
     * –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–†–û–ë–õ–ï–ú–´ #3: –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–º–µ–Ω—ã –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
     */
    private TelegramResponse handleCancelTopup(Long userId) {
        log.info("‚ùå –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–º–µ–Ω—ã –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}", userId);
        try {
            // –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Å—Å–∏–∏
            sessionService.updateSessionState(userId, UserSession.SessionState.IDLE);

            // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫ –±–∞–ª–∞–Ω—Å—É
            return telegramService.execute(new ShowBalanceQuery(userId, true));
        } catch (Exception e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è: {}", e.getMessage());
            return TelegramResponse.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –æ–ø–µ—Ä–∞—Ü–∏–∏");
        }
    }

    /**
     * –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –æ–ø–ª–∞—Ç–µ
     */
    private TelegramResponse handleProcessPayment(Long userId, String amount) {
        log.info("üí≥ –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –æ–ø–ª–∞—Ç–µ —Å—É–º–º—ã {} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}", amount, userId);
        try {
            // –ü–æ–ª—É—á–∞–µ–º —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏–∑ —Å–µ—Å—Å–∏–∏
            String paymentMethod = getPaymentMethodFromSession(userId);

            // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Å—Å—ã–ª–∫–æ–π –Ω–∞ –æ–ø–ª–∞—Ç—É (–ø–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∞)
            String message = String.format("""
                    üí≥ <b>–ü–µ—Ä–µ—Ö–æ–¥ –∫ –æ–ø–ª–∞—Ç–µ</b>

                    üí∞ <b>–°—É–º–º–∞:</b> %s USD
                    üí≥ <b>–°–ø–æ—Å–æ–±:</b> %s
                    ‚è±Ô∏è <b>–°—Ç–∞—Ç—É—Å:</b> –ì–æ—Ç–æ–≤ –∫ –æ–ø–ª–∞—Ç–µ

                    üîó <a href="https://example.com/payment">–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Ñ–æ—Ä–º–µ</a>

                    ‚ö†Ô∏è –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –±–∞–ª–∞–Ω—Å –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω
                    """,
                    amount,
                    getPaymentMethodDisplayName(paymentMethod));

            // –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞
            var keyboard = new shit.back.telegram.ui.builder.TelegramKeyboardBuilder()
                    .addButton("‚úÖ –û–ø–ª–∞—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞", "payment_completed_" + amount)
                    .addButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", "cancel_topup")
                    .newRow()
                    .addButton("üîô –ö –±–∞–ª–∞–Ω—Å—É", "show_balance")
                    .build();

            return TelegramResponse.builder()
                    .successful(true)
                    .message(message)
                    .uiType("PAYMENT_LINK")
                    .data(keyboard)
                    .build();

        } catch (Exception e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –∫ –æ–ø–ª–∞—Ç–µ: {}", e.getMessage());
            return TelegramResponse.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –∫ –æ–ø–ª–∞—Ç–µ: " + e.getMessage());
        }
    }

    // ===========================================
    // –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –ú–ï–¢–û–î–´ –î–õ–Ø –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–ò
    // ===========================================

    /**
     * –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–¥–∞–≤–Ω–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –¥—É–±–ª–∏–∫–∞—Ç–æ–≤
     */
    private boolean isRecentOperation(String operationKey) {
        Long lastOperationTime = operationCache.get(operationKey);
        if (lastOperationTime == null) {
            return false;
        }

        long currentTime = System.currentTimeMillis();
        return (currentTime - lastOperationTime) < OPERATION_CACHE_TTL_MS;
    }

    /**
     * –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏
     */
    private void registerOperation(String operationKey) {
        operationCache.put(operationKey, System.currentTimeMillis());

        // –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∑–∞–ø–∏—Å–µ–π
        if (operationCache.size() > 1000) {
            cleanupOldOperations();
        }
    }

    /**
     * –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π –∏–∑ –∫—ç—à–∞
     */
    private void cleanupOldOperations() {
        long currentTime = System.currentTimeMillis();
        operationCache.entrySet().removeIf(entry -> (currentTime - entry.getValue()) > OPERATION_CACHE_TTL_MS);
    }

    /**
     * –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ì–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Å—Å–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     */
    private void ensureUserSession(Long userId, org.telegram.telegrambots.meta.api.objects.User telegramUser) {
        try {
            String username = telegramUser.getUserName();
            String firstName = telegramUser.getFirstName();
            String lastName = telegramUser.getLastName();

            sessionService.getOrCreateSession(userId, username, firstName, lastName);
            log.debug("‚úÖ –°–µ—Å—Å–∏—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}", userId);
        } catch (Exception e) {
            log.error("‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Å—Å–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}: {}", userId, e.getMessage());
            throw new RuntimeException("Failed to ensure user session", e);
        }
    }

    /**
     * –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ callback'–æ–≤ —Å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º
     */
    private TelegramResponse processCallbackDataOptimized(Long userId, String callbackData) {
        log.debug("üîç –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ callback '{}' –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {}", callbackData, userId);

        // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –º–µ—Ç–æ–¥ —Å –Ω–µ–±–æ–ª—å—à–∏–º–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è–º–∏
        return processCallbackData(userId, callbackData);
    }

    /**
     * –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞
     * –ü–æ–ø–æ–ª–Ω—è–µ—Ç –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Å—Å–∏–∏
     */
    private TelegramResponse handlePaymentCompleted(Long userId, String amount) {
        log.info("‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞ —Å—É–º–º—ã {} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}", amount, userId);
        try {
            // –í–∞–ª–∏–¥–∞—Ü–∏—è —Å—É–º–º—ã
            BigDecimal amountDecimal;
            try {
                amountDecimal = new BigDecimal(amount);
                if (amountDecimal.compareTo(BigDecimal.ZERO) <= 0) {
                    throw new IllegalArgumentException("–°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π");
                }
            } catch (NumberFormatException e) {
                log.error("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—É–º–º–∞ –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è: {}", amount);
                return TelegramResponse.error("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—É–º–º–∞ –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è");
            }

            // –°–æ–∑–¥–∞–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞
            OperationRequest operationRequest = new OperationRequest();
            operationRequest.setOperationType(OperationRequest.OperationType.DEPOSIT);
            operationRequest.setUserId(userId);
            operationRequest.setAmount(amountDecimal);
            operationRequest.setCurrency("USD"); // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é USD, –∫–∞–∫ –≤ —Å–∏—Å—Ç–µ–º–µ
            operationRequest.setDescription("–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ —á–µ—Ä–µ–∑ Telegram Bot - " + amount + " USD");
            operationRequest
                    .setIdempotencyKey("telegram_topup_" + userId + "_" + amount + "_" + System.currentTimeMillis());

            // –ü–æ–ª—É—á–∞–µ–º —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏–∑ —Å–µ—Å—Å–∏–∏ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
            String paymentMethod = getPaymentMethodFromSession(userId);
            if (paymentMethod != null) {
                operationRequest.setPaymentMethodId(paymentMethod);
            }

            log.info("üí∞ –í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {} –Ω–∞ —Å—É–º–º—É {} USD", userId, amount);

            // –í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ —á–µ—Ä–µ–∑ BalanceApplicationServiceV2
            Result<BalanceResponse> result = balanceService.processOperation(operationRequest);

            if (result.isSuccess()) {
                BalanceResponse balanceResponse = result.getValue();

                // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Å—Å–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ IDLE
                sessionService.updateSessionState(userId, UserSession.SessionState.IDLE);

                log.info("‚úÖ –ë–∞–ª–∞–Ω—Å —É—Å–ø–µ—à–Ω–æ –ø–æ–ø–æ–ª–Ω–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}. –ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: {} USD",
                        userId, balanceResponse.getCurrentBalance());

                // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏
                String message = String.format("""
                        ‚úÖ <b>–ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω!</b>

                        üí∞ <b>–ü–æ–ø–æ–ª–Ω–µ–Ω–æ:</b> %s USD
                        üí≥ <b>–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:</b> %s
                        üìä <b>–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å:</b> %s USD

                        üéâ –°—Ä–µ–¥—Å—Ç–≤–∞ –∑–∞—á–∏—Å–ª–µ–Ω—ã –Ω–∞ –≤–∞—à —Å—á–µ—Ç!
                        """,
                        amount,
                        getPaymentMethodDisplayName(paymentMethod),
                        balanceResponse.getCurrentBalance());

                // –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –¥–∞–ª—å–Ω–µ–π—à–∏–º–∏ –¥–µ–π—Å—Ç–≤–∏—è–º–∏
                var keyboard = new shit.back.telegram.ui.builder.TelegramKeyboardBuilder()
                        .addButton("üí∞ –ü–æ–∫–∞–∑–∞—Ç—å –±–∞–ª–∞–Ω—Å", "show_balance")
                        .addButton("‚≠ê –ö—É–ø–∏—Ç—å –∑–≤–µ–∑–¥—ã", "buy_stars")
                        .newRow()
                        .addButton("üí≥ –ü–æ–ø–æ–ª–Ω–∏—Ç—å —Å–Ω–æ–≤–∞", "topup_balance")
                        .addButton("üìä –ò—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π", "show_history")
                        .build();

                return TelegramResponse.builder()
                        .successful(true)
                        .message(message)
                        .uiType("PAYMENT_SUCCESS")
                        .data(keyboard)
                        .build();

            } else {
                log.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}: {}",
                        userId, result.getError().getMessage());

                // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –±–∞–ª–∞–Ω—Å—É
                sessionService.updateSessionState(userId, UserSession.SessionState.IDLE);

                String errorMessage = String.format("""
                        ‚ùå <b>–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞—á–∏—Å–ª–µ–Ω–∏–∏ —Å—Ä–µ–¥—Å—Ç–≤</b>

                        üí∞ <b>–°—É–º–º–∞:</b> %s USD
                        ‚ö†Ô∏è <b>–ü—Ä–∏—á–∏–Ω–∞:</b> %s

                        üîÑ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É
                        """,
                        amount,
                        result.getError().getMessage());

                // –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–≤—Ç–æ—Ä–∞ –∏–ª–∏ –æ—Ç–º–µ–Ω—ã
                var keyboard = new shit.back.telegram.ui.builder.TelegramKeyboardBuilder()
                        .addButton("üîÑ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞", "topup_balance")
                        .addButton("üí∞ –ö –±–∞–ª–∞–Ω—Å—É", "show_balance")
                        .build();

                return TelegramResponse.builder()
                        .successful(true)
                        .message(errorMessage)
                        .uiType("PAYMENT_ERROR")
                        .data(keyboard)
                        .build();
            }

        } catch (Exception e) {
            log.error("‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}: {}", userId, e.getMessage(), e);

            // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Å—Å–∏–∏ –¥–∞–∂–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ
            try {
                sessionService.updateSessionState(userId, UserSession.SessionState.IDLE);
            } catch (Exception sessionError) {
                log.error("‚ùå –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ —Å–µ—Å—Å–∏–∏: {}", sessionError.getMessage());
            }

            return TelegramResponse.error("–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞: " + e.getMessage());
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–∫—É–ø–∫–∏ –∑–≤–µ–∑–¥
     * –§–æ—Ä–º–∞—Ç callback: proceed_purchase_{–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ}
     * –ü—Ä–∏–º–µ—Ä: proceed_purchase_1000
     */
    private TelegramResponse handleProceedPurchase(Long userId, String callbackData) {
        try {
            log.info("‚≠ê –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–∫—É–ø–∫–∏ –∑–≤–µ–∑–¥: {} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {}", callbackData, userId);

            // –ü–∞—Ä—Å–∏–Ω–≥ callback –¥–∞–Ω–Ω—ã—Ö: proceed_purchase_1000
            String starCountStr = callbackData.substring("proceed_purchase_".length());
            int starCount = Integer.parseInt(starCountStr);

            log.info("‚≠ê –ò–∑–≤–ª–µ—á–µ–Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–≤–µ–∑–¥ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {}", starCount, userId);

            // –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –ø–æ–∫—É–ø–∫–∏ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º
            InitiateStarPurchaseCommand command = new InitiateStarPurchaseCommand(
                    userId,
                    starCount,
                    true // confirmPurchase = true
            );

            return telegramService.execute(command);

        } catch (NumberFormatException e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–≤–µ–∑–¥ –∏–∑ callback '{}': {}", callbackData, e.getMessage());
            return TelegramResponse.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–∫—É–ø–∫–∏");
        } catch (Exception e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏ –∑–≤–µ–∑–¥ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}: {}", userId, e.getMessage());
            return TelegramResponse.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏: " + e.getMessage());
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–∫—É–ø–∫–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–∞–∫–µ—Ç–∞ –∑–≤–µ–∑–¥
     * –§–æ—Ä–º–∞—Ç callback: buy_stars_{–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ}_{—Ü–µ–Ω–∞}
     * –ü—Ä–∏–º–µ—Ä: buy_stars_500_4.50
     */
    private TelegramResponse handleBuyStarsPackage(Long userId, String callbackData) {
        try {
            log.info("‚≠ê –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–∫—É–ø–∫–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–∞–∫–µ—Ç–∞ –∑–≤–µ–∑–¥: {} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {}", callbackData, userId);

            // –ü–∞—Ä—Å–∏–Ω–≥ callback –¥–∞–Ω–Ω—ã—Ö: buy_stars_500_4.50
            String[] parts = callbackData.split("_");
            if (parts.length >= 3) {
                int starCount = Integer.parseInt(parts[2]);

                log.info("‚≠ê –ò–∑–≤–ª–µ—á–µ–Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–≤–µ–∑–¥: {} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {}", starCount, userId);

                // –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –ø–æ–∫—É–ø–∫–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–∞–∫–µ—Ç–∞ –∑–≤–µ–∑–¥
                InitiateStarPurchaseCommand command = new InitiateStarPurchaseCommand(userId, starCount);
                return telegramService.execute(command);
            } else {
                log.error("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç callback –¥–∞–Ω–Ω—ã—Ö –ø–∞–∫–µ—Ç–∞ –∑–≤–µ–∑–¥: {}", callbackData);
                return TelegramResponse.error("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö –ø–∞–∫–µ—Ç–∞ –∑–≤–µ–∑–¥");
            }
        } catch (NumberFormatException e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–≤–µ–∑–¥ –≤ callback: {} - {}", callbackData, e.getMessage());
            return TelegramResponse.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö –ø–∞–∫–µ—Ç–∞ –∑–≤–µ–∑–¥");
        } catch (Exception e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ –∑–≤–µ–∑–¥ –¥–ª—è callback: {} - {}", callbackData, e.getMessage(), e);
            return TelegramResponse.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ –∑–≤–µ–∑–¥: " + e.getMessage());
        }
    }

}