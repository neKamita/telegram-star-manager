package shit.back.telegram.commands.handlers;

import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;
import shit.back.application.balance.service.BalanceApplicationFacade;
import shit.back.application.balance.dto.response.SimpleBalanceResponse;
import shit.back.application.balance.mapper.BalanceResponseMapper;
import shit.back.domain.balance.valueobjects.Money;
import shit.back.service.FragmentIntegrationService;
import shit.back.service.StarPurchaseService;
import shit.back.service.UserSessionUnifiedService;
import shit.back.telegram.commands.InitiateStarPurchaseCommand;
import shit.back.telegram.commands.TelegramCommandHandler;
import shit.back.telegram.dto.TelegramResponse;
import shit.back.telegram.ui.strategy.StarPurchaseFlowStrategy;
import shit.back.telegram.ui.strategy.SimplifiedStarPurchaseStrategy;
import shit.back.telegram.ui.builder.TelegramKeyboardBuilder;

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –∏–Ω–∏—Ü–∏–∞—Ü–∏–∏ –ø–æ–∫—É–ø–∫–∏ –∑–≤–µ–∑–¥
 * 
 * –ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ—Ç—Å—è —Å StarPurchaseFlowStrategy –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–ª–æ—É –ø–æ–∫—É–ø–∫–∏
 */
@Component
@Slf4j
public class InitiateStarPurchaseCommandHandler implements TelegramCommandHandler<InitiateStarPurchaseCommand> {

    @Autowired
    private BalanceApplicationFacade balanceApplicationFacade;

    @Autowired
    private StarPurchaseFlowStrategy starPurchaseFlowStrategy;

    @Autowired
    private SimplifiedStarPurchaseStrategy simplifiedStarPurchaseStrategy;

    @Autowired
    private StarPurchaseService starPurchaseService;

    @Autowired
    private FragmentIntegrationService fragmentIntegrationService;

    @Autowired
    private UserSessionUnifiedService sessionService;

    @Override
    @Transactional
    public TelegramResponse handle(InitiateStarPurchaseCommand command) throws Exception {
        log.info("‚≠ê –ò–Ω–∏—Ü–∏–∞—Ü–∏—è –ø–æ–∫—É–ø–∫–∏ –∑–≤–µ–∑–¥: userId={}, stars={}, amount={}, confirm={}",
                command.getUserId(), command.getStarCount(), command.getCustomAmount(), command.isConfirmPurchase());

        try {
            // –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥—ã
            command.validate();

            // –§–ê–ó–ê 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–Ω–æ –ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —É–ø—Ä–æ—â–µ–Ω–Ω—É—é –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É
            boolean useSimplified = shouldUseSimplifiedPurchase(command);

            if (useSimplified) {
                log.info("üåü –§–ê–ó–ê2: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —É–ø—Ä–æ—â–µ–Ω–Ω–æ–π –ø–æ–∫—É–ø–∫–∏ –∑–≤–µ–∑–¥ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}", command.getUserId());
                return handleSimplifiedPurchase(command);
            } else {
                log.info("üîÑ –§–ê–ó–ê2: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ legacy DualBalance –ø–æ–∫—É–ø–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}", command.getUserId());
                return handleLegacyPurchase(command);
            }

        } catch (IllegalArgumentException e) {
            log.warn("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –ø–æ–∫—É–ø–∫–∏ –∑–≤–µ–∑–¥ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}: {}",
                    command.getUserId(), e.getMessage());
            return TelegramResponse.error("‚ùå " + e.getMessage());

        } catch (Exception e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞—Ü–∏–∏ –ø–æ–∫—É–ø–∫–∏ –∑–≤–µ–∑–¥ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}: {}",
                    command.getUserId(), e.getMessage(), e);
            return TelegramResponse.error("–ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∏—Ä–æ–≤–∞—Ç—å –ø–æ–∫—É–ø–∫—É –∑–≤–µ–∑–¥: " + e.getMessage());
        }
    }

    @Override
    public Class<InitiateStarPurchaseCommand> getCommandType() {
        return InitiateStarPurchaseCommand.class;
    }

    @Override
    public int getHandlerPriority() {
        return 5; // –û—á–µ–Ω—å –≤—ã—Å–æ–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –∑–≤–µ–∑–¥
    }

    @Override
    public String getDescription() {
        return "–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥ –ø–æ–∫—É–ø–∫–∏ –∑–≤–µ–∑–¥ —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π StarPurchaseFlowStrategy";
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–∫—É–ø–∫–∏
     */
    private TelegramResponse handlePurchaseConfirmation(InitiateStarPurchaseCommand command,
            SimpleBalanceResponse balanceData) throws Exception {
        log.info("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–∫—É–ø–∫–∏ –∑–≤–µ–∑–¥: userId={}, stars={}",
                command.getUserId(), command.getEffectiveStarCount());

        Money requiredAmount = command.getEffectiveAmount();

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ—Å—Ç—å —Å—Ä–µ–¥—Å—Ç–≤
        if (!balanceData.hasSufficientFunds(requiredAmount)) {
            return handleInsufficientFunds(command, balanceData, requiredAmount);
        }

        // –ò–Ω–∏—Ü–∏–∏—Ä—É–µ–º –ø–æ–∫—É–ø–∫—É —á–µ—Ä–µ–∑ Fragment API
        try {
            // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Ä–µ–∞–ª—å–Ω—É—é –ø–æ–∫—É–ø–∫—É —á–µ—Ä–µ–∑ FragmentIntegrationService
            log.info("üöÄ –ó–∞–ø—É—Å–∫ –ø–æ–∫—É–ø–∫–∏ –∑–≤–µ–∑–¥ —á–µ—Ä–µ–∑ Fragment API: userId={}, stars={}, amount={}",
                    command.getUserId(), command.getEffectiveStarCount(), requiredAmount);

            // –í—Ä–µ–º–µ–Ω–Ω–∞—è –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
            var confirmationData = new StarPurchaseFlowStrategy.PurchaseConfirmationData(
                    command.getEffectiveStarCount(),
                    requiredAmount,
                    command.getCurrency().getSymbol());

            String message = starPurchaseFlowStrategy.formatContent("PURCHASE_CONFIRMATION", confirmationData);

            // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Å—Å–∏–∏
            updateSessionState(command.getUserId(), "STAR_PURCHASE_CONFIRMED");

            // –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–∫—É–ø–∫–∏
            var keyboard = new TelegramKeyboardBuilder()
                    .addButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–æ–∫—É–ø–∫—É", "confirm_purchase_" + command.getEffectiveStarCount())
                    .addButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", "cancel_purchase")
                    .newRow()
                    .addButton("üîô –ù–∞–∑–∞–¥ –∫ –±–∞–ª–∞–Ω—Å—É", "show_balance")
                    .build();

            return TelegramResponse.builder()
                    .successful(true)
                    .message(message)
                    .uiType("PURCHASE_CONFIRMATION")
                    .uiData(confirmationData)
                    .data(keyboard)
                    .build();

        } catch (Exception e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ –∑–≤–µ–∑–¥ —á–µ—Ä–µ–∑ Fragment API: {}", e.getMessage(), e);
            return TelegramResponse.error("–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø–æ–∫—É–ø–∫—É –∑–≤–µ–∑–¥: " + e.getMessage());
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–ª–∞–Ω—Å–∞
     */
    private TelegramResponse handleBalanceCheck(InitiateStarPurchaseCommand command,
            SimpleBalanceResponse balanceData) {
        log.debug("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –∑–≤–µ–∑–¥: userId={}", command.getUserId());

        Money requiredAmount = command.getEffectiveAmount();
        Integer starCount = command.getEffectiveStarCount();

        var checkData = new StarPurchaseFlowStrategy.BalanceCheckData(balanceData, starCount, requiredAmount);
        String message = starPurchaseFlowStrategy.formatContent("BALANCE_CHECK", checkData);

        // –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–ª–∞–Ω—Å–∞
        var keyboardBuilder = new TelegramKeyboardBuilder();

        if (balanceData.hasSufficientFunds(requiredAmount)) {
            keyboardBuilder.addButton("‚úÖ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–∫—É–ø–∫—É", "proceed_purchase_" + starCount);
        } else {
            keyboardBuilder.addButton("üí≥ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å", "topup_balance");
        }

        keyboardBuilder.addButton("üîô –ù–∞–∑–∞–¥", "show_balance");
        var keyboard = keyboardBuilder.build();

        return TelegramResponse.builder()
                .successful(true)
                .message(message)
                .uiType("BALANCE_CHECK")
                .uiData(checkData)
                .data(keyboard)
                .build();
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –ø–æ–∫—É–ø–∫–∏
     */
    private TelegramResponse handlePurchaseInterface(InitiateStarPurchaseCommand command,
            SimpleBalanceResponse balanceData) {
        log.debug("üéØ –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –ø–æ–∫—É–ø–∫–∏ –∑–≤–µ–∑–¥: userId={}", command.getUserId());

        String message = starPurchaseFlowStrategy.formatContent("PURCHASE_INTERFACE", balanceData);

        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Å—Å–∏–∏
        updateSessionState(command.getUserId(), "STAR_PURCHASE_INTERFACE");

        // –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø–∞–∫–µ—Ç–∞–º–∏ –∑–≤–µ–∑–¥
        var keyboardBuilder = new TelegramKeyboardBuilder();

        // –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –ø–∞–∫–µ—Ç—ã –∑–≤–µ–∑–¥
        int[] starPackages = { 100, 250, 500, 1000, 2500 };
        boolean hasAnyAffordable = false;

        for (int stars : starPackages) {
            Money packagePrice = Money.of(java.math.BigDecimal.valueOf(stars * 0.01)); // –ü—Ä–∏–º–µ—Ä–Ω–∞—è —Ü–µ–Ω–∞
            boolean canAfford = balanceData.hasSufficientFunds(packagePrice);

            if (canAfford) {
                hasAnyAffordable = true;
                keyboardBuilder.addButton("‚≠ê" + stars, "buy_stars_" + stars);
            } else {
                keyboardBuilder.addButton("‚ùå ‚≠ê" + stars, "insufficient_" + stars);
            }

            if (stars == 500)
                keyboardBuilder.newRow(); // –†–∞–∑–¥–µ–ª—è–µ–º –ø–æ —Ä—è–¥–∞–º
        }

        keyboardBuilder.newRow();

        if (hasAnyAffordable) {
            keyboardBuilder.addButton("üíé –°–≤–æ–π —Ä–∞–∑–º–µ—Ä", "custom_stars");
        }

        if (!balanceData.getCurrentBalance().isPositive()) {
            keyboardBuilder.addButton("üí≥ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å", "topup_balance");
        }

        keyboardBuilder.addButton("üîô –ù–∞–∑–∞–¥", "show_balance");
        var keyboard = keyboardBuilder.build();

        return TelegramResponse.builder()
                .successful(true)
                .message(message)
                .uiType("PURCHASE_INTERFACE")
                .uiData(balanceData)
                .data(keyboard)
                .build();
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ—Å—Ç–∏ —Å—Ä–µ–¥—Å—Ç–≤
     */
    private TelegramResponse handleInsufficientFunds(InitiateStarPurchaseCommand command,
            SimpleBalanceResponse balanceData, Money requiredAmount) {
        log.warn("üí∏ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –∑–≤–µ–∑–¥: userId={}, required={}, available={}",
                command.getUserId(), requiredAmount, balanceData.getCurrentBalance());

        var fundsData = new StarPurchaseFlowStrategy.InsufficientFundsData(
                balanceData, requiredAmount, command.getEffectiveStarCount());

        String message = starPurchaseFlowStrategy.formatContent("INSUFFICIENT_FUNDS", fundsData);

        // –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–∞ —Å—Ä–µ–¥—Å—Ç–≤
        var keyboardBuilder = new TelegramKeyboardBuilder();

        Money shortfall = requiredAmount.subtract(balanceData.getCurrentBalance());

        keyboardBuilder
                .addButton("üí≥ –ü–æ–ø–æ–ª–Ω–∏—Ç—å " + shortfall.getFormattedAmount(),
                        "topup_amount_" + shortfall.getFormattedAmount())
                .newRow()
                .addButton("üí≥ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å", "topup_balance")
                .addButton("üîô –ù–∞–∑–∞–¥", "show_balance");

        var keyboard = keyboardBuilder.build();

        return TelegramResponse.builder()
                .successful(true)
                .message(message)
                .uiType("INSUFFICIENT_FUNDS")
                .uiData(fundsData)
                .data(keyboard)
                .build();
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     */
    private SimpleBalanceResponse getUserBalance(Long userId) {
        try {
            var balanceResult = balanceApplicationFacade.getBalance(userId);

            if (balanceResult != null && balanceResult.isSuccess()) {
                log.info("üìä –ü–æ–ª—É—á–µ–Ω —Ä–µ–∑—É–ª—å—Ç–∞—Ç –±–∞–ª–∞–Ω—Å–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {}", userId);

                // –†–µ–∞–ª—å–Ω–∞—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è BalanceResponse –≤ SimpleBalanceResponse
                var balanceResponse = balanceResult.getValue();
                return convertToBalanceResponse(userId, balanceResponse);
            }

            log.warn("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {}", userId);
            return null;

        } catch (Exception e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}: {}", userId, e.getMessage(), e);
            return null;
        }
    }

    /**
     * –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è BalanceResponse –≤ SimpleBalanceResponse
     *
     * –ò–°–ü–†–ê–í–õ–ï–ù–û: –¢–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç BalanceResponseMapper –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ
     * –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è
     */
    private SimpleBalanceResponse convertToBalanceResponse(Long userId, Object balanceData) {
        try {
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π BalanceResponseMapper –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è
            if (balanceData instanceof shit.back.application.balance.dto.response.BalanceResponse) {
                var balanceResponse = (shit.back.application.balance.dto.response.BalanceResponse) balanceData;

                log.debug(
                        "üîÑ –ò–°–ü–†–ê–í–õ–ï–ù–û InitiateStarPurchase: –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è BalanceResponse —á–µ—Ä–µ–∑ –º–∞–ø–ø–µ—Ä –¥–ª—è userId={}, currentBalance={}",
                        userId, balanceResponse.getCurrentBalance());

                // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –º–∞–ø–ø–µ—Ä –≤–º–µ—Å—Ç–æ —Å–æ–∑–¥–∞–Ω–∏—è –Ω—É–ª–µ–≤—ã—Ö –±–∞–ª–∞–Ω—Å–æ–≤
                SimpleBalanceResponse dualResponse = shit.back.application.balance.mapper.BalanceResponseMapper
                        .toSimpleBalanceResponse(balanceResponse);

                if (dualResponse != null) {
                    log.info(
                            "‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û InitiateStarPurchase: userId={}, –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞ - currentBalance={}",
                            userId,
                            dualResponse.getFormattedBalance());
                    return dualResponse;
                }
            }

            // Fallback: —Å–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π –±–∞–ª–∞–Ω—Å –µ—Å–ª–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å
            log.warn(
                    "‚ö†Ô∏è InitiateStarPurchase: –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ç–∏–ø balanceData: {}, —Å–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π SimpleBalance –¥–ª—è userId={}",
                    balanceData != null ? balanceData.getClass().getSimpleName() : "null", userId);

            return shit.back.application.balance.mapper.BalanceResponseMapper.createEmptyBalance(userId);

        } catch (Exception e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ BalanceResponse: {}", e.getMessage(), e);
            return shit.back.application.balance.mapper.BalanceResponseMapper.createEmptyBalance(userId);
        }
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Å—Å–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     */
    private void updateSessionState(Long userId, String state) {
        try {
            log.debug("üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Å—Å–∏–∏: userId={}, state={}", userId, state);

            // –†–µ–∞–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–µ—Å—Å–∏–∏ —á–µ—Ä–µ–∑ sessionService
            var session = sessionService.getOrCreateSession(userId, "TelegramBot", "star_purchase", state);
            if (session != null) {
                log.info("‚úÖ –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Å—Å–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}: {}", userId, state);
            }
        } catch (Exception e) {
            log.warn("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Å—Å–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}: {}", userId, e.getMessage());
            // –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ —Å–µ—Å—Å–∏–∏
        }
    }

    /**
     * –§–ê–ó–ê 2: –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç, —Å–ª–µ–¥—É–µ—Ç –ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —É–ø—Ä–æ—â–µ–Ω–Ω—É—é –ø–æ–∫—É–ø–∫—É –∑–≤–µ–∑–¥
     */
    private boolean shouldUseSimplifiedPurchase(InitiateStarPurchaseCommand command) {
        // –ü—Ä–æ—Å—Ç–∞—è –ª–æ–≥–∏–∫–∞: –∏—Å–ø–æ–ª—å–∑—É–µ–º —É–ø—Ä–æ—â–µ–Ω–Ω—É—é –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É –¥–ª—è –ø—Ä—è–º—ã—Ö –ø–æ–∫—É–ø–æ–∫
        return "PURCHASE_CONFIRMATION".equals(command.getOperationType()) ||
                "PURCHASE_INTERFACE".equals(command.getOperationType());
    }

    /**
     * –§–ê–ó–ê 2: –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–∫—É–ø–∫–∏ –∑–≤–µ–∑–¥ —Å —É–ø—Ä–æ—â–µ–Ω–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π
     */
    private TelegramResponse handleSimplifiedPurchase(InitiateStarPurchaseCommand command) {
        try {
            // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            SimpleBalanceResponse simpleBalance = getSimpleBalance(command.getUserId());
            if (simpleBalance == null) {
                return TelegramResponse.error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–∞–ª–∞–Ω—Å–µ");
            }

            // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ç–∏–ø—ã –æ–ø–µ—Ä–∞—Ü–∏–π —É–ø—Ä–æ—â–µ–Ω–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º
            return switch (command.getOperationType()) {
                case "PURCHASE_CONFIRMATION" -> handleSimplifiedConfirmation(command, simpleBalance);
                case "PURCHASE_INTERFACE" -> handleSimplifiedInterface(simpleBalance);
                default ->
                    TelegramResponse.error("–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø —É–ø—Ä–æ—â–µ–Ω–Ω–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏: " + command.getOperationType());
            };

        } catch (Exception e) {
            log.error("‚ùå –§–ê–ó–ê2: –û—à–∏–±–∫–∞ —É–ø—Ä–æ—â–µ–Ω–Ω–æ–π –ø–æ–∫—É–ø–∫–∏ –∑–≤–µ–∑–¥: {}", e.getMessage(), e);
            return TelegramResponse.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–ø—Ä–æ—â–µ–Ω–Ω–æ–π –ø–æ–∫—É–ø–∫–µ –∑–≤–µ–∑–¥: " + e.getMessage());
        }
    }

    /**
     * –§–ê–ó–ê 2: –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–∫—É–ø–∫–∏ –∑–≤–µ–∑–¥ —Å–æ —Å—Ç–∞—Ä–æ–π DualBalance –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π
     */
    private TelegramResponse handleLegacyPurchase(InitiateStarPurchaseCommand command) {
        try {
            // –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            SimpleBalanceResponse balanceData = getUserBalance(command.getUserId());
            if (balanceData == null) {
                return TelegramResponse.error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–∞–ª–∞–Ω—Å–µ");
            }

            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏ –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ
            return switch (command.getOperationType()) {
                case "PURCHASE_CONFIRMATION" -> handlePurchaseConfirmation(command, balanceData);
                case "BALANCE_CHECK" -> handleBalanceCheck(command, balanceData);
                case "PURCHASE_INTERFACE" -> handlePurchaseInterface(command, balanceData);
                default -> TelegramResponse.error("–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏: " + command.getOperationType());
            };

        } catch (Exception e) {
            log.error("‚ùå LEGACY: –û—à–∏–±–∫–∞ legacy –ø–æ–∫—É–ø–∫–∏ –∑–≤–µ–∑–¥: {}", e.getMessage(), e);
            return TelegramResponse.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ legacy –ø–æ–∫—É–ø–∫–µ –∑–≤–µ–∑–¥: " + e.getMessage());
        }
    }

    /**
     * –§–ê–ó–ê 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     */
    private SimpleBalanceResponse getSimpleBalance(Long userId) {
        try {
            var balanceResult = balanceApplicationFacade.getBalance(userId);

            if (balanceResult != null && balanceResult.isSuccess()) {
                log.debug("üåü –§–ê–ó–ê2: –ü–æ–ª—É—á–µ–Ω —Ä–µ–∑—É–ª—å—Ç–∞—Ç –±–∞–ª–∞–Ω—Å–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {}", userId);

                if (balanceResult.getValue() instanceof shit.back.application.balance.dto.response.BalanceResponse) {
                    var balanceResponse = (shit.back.application.balance.dto.response.BalanceResponse) balanceResult
                            .getValue();
                    return BalanceResponseMapper.toSimpleBalanceResponse(balanceResponse);
                }
            }

            log.warn("‚ö†Ô∏è –§–ê–ó–ê2: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ—Å—Ç–æ–π –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {}", userId);
            return BalanceResponseMapper.createEmptyBalance(userId);

        } catch (Exception e) {
            log.error("‚ùå –§–ê–ó–ê2: –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Å—Ç–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}: {}", userId, e.getMessage(), e);
            return BalanceResponseMapper.createEmptyBalance(userId);
        }
    }

    /**
     * –§–ê–ó–ê 2: –£–ø—Ä–æ—â–µ–Ω–Ω–æ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–∫—É–ø–∫–∏ –∑–≤–µ–∑–¥
     */
    private TelegramResponse handleSimplifiedConfirmation(InitiateStarPurchaseCommand command,
            SimpleBalanceResponse balance) {
        try {
            Money requiredAmount = command.getEffectiveAmount();
            Integer starCount = command.getEffectiveStarCount();

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ—Å—Ç—å —Å—Ä–µ–¥—Å—Ç–≤
            if (!balance.hasSufficientFunds(requiredAmount)) {
                log.warn("üí∏ –§–ê–ó–ê2: –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ {} –∑–≤–µ–∑–¥: —Ç—Ä–µ–±—É–µ—Ç—Å—è {}, –¥–æ—Å—Ç—É–ø–Ω–æ {}",
                        starCount, requiredAmount.getFormattedAmount(), balance.getFormattedBalance());
                return TelegramResponse.error("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –∑–≤–µ–∑–¥");
            }

            // –í—ã–ø–æ–ª–Ω—è–µ–º –ø—Ä—è–º—É—é –ø–æ–∫—É–ø–∫—É —á–µ—Ä–µ–∑ StarPurchaseService
            var purchaseResult = starPurchaseService.purchaseStars(command.getUserId(), starCount, requiredAmount);

            if (purchaseResult.isSuccess()) {
                log.info("‚úÖ –§–ê–ó–ê2: –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –ø–æ–∫—É–ø–∫–∞ –∑–≤–µ–∑–¥ —É—Å–ø–µ—à–Ω–∞: userId={}, stars={}, transactionId={}",
                        command.getUserId(), starCount, purchaseResult.getTransactionId());

                String successMessage = String.format(
                        "üåü <b>–ü–æ–∫—É–ø–∫–∞ –∑–≤–µ–∑–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!</b>\n\n" +
                                "‚≠ê –ö—É–ø–ª–µ–Ω–æ –∑–≤–µ–∑–¥: <b>%d</b>\n" +
                                "üí∞ –°–ø–∏—Å–∞–Ω–æ —Å –±–∞–ª–∞–Ω—Å–∞: <b>%s</b>\n" +
                                "üî¢ ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: <code>%s</code>\n\n" +
                                "‚úÖ –ó–≤–µ–∑–¥—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç Telegram!",
                        starCount,
                        requiredAmount.getFormattedAmount() + " " + balance.getCurrency().getSymbol(),
                        purchaseResult.getTransactionId());

                // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
                var keyboard = new TelegramKeyboardBuilder()
                        .addButton("üí∞ –ü–æ–∫–∞–∑–∞—Ç—å –±–∞–ª–∞–Ω—Å", "show_balance")
                        .addButton("üìã –ò—Å—Ç–æ—Ä–∏—è –ø–æ–∫—É–ø–æ–∫", "purchase_history")
                        .newRow()
                        .addButton("üåü –ö—É–ø–∏—Ç—å –µ—â–µ", "buy_stars")
                        .build();

                return TelegramResponse.builder()
                        .successful(true)
                        .message(successMessage)
                        .uiType("PURCHASE_SUCCESS")
                        .uiData(purchaseResult)
                        .data(keyboard)
                        .build();
            } else {
                log.error("‚ùå –§–ê–ó–ê2: –û—à–∏–±–∫–∞ —É–ø—Ä–æ—â–µ–Ω–Ω–æ–π –ø–æ–∫—É–ø–∫–∏: {}", purchaseResult.getErrorMessage());
                return TelegramResponse.error("–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø–æ–∫—É–ø–∫—É: " + purchaseResult.getErrorMessage());
            }

        } catch (Exception e) {
            log.error("‚ùå –§–ê–ó–ê2: –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —É–ø—Ä–æ—â–µ–Ω–Ω–æ–≥–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {}", e.getMessage(), e);
            return TelegramResponse.error("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ –∑–≤–µ–∑–¥: " + e.getMessage());
        }
    }

    /**
     * –§–ê–ó–ê 2: –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø–æ–∫—É–ø–∫–∏ –∑–≤–µ–∑–¥
     */
    private TelegramResponse handleSimplifiedInterface(SimpleBalanceResponse balance) {
        try {
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–ø—Ä–æ—â–µ–Ω–Ω—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
            var uiResponse = simplifiedStarPurchaseStrategy.createStarPurchaseFlow(balance);

            // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º TelegramUIResponse –≤ TelegramResponse
            return TelegramResponse.builder()
                    .successful(true)
                    .message(uiResponse.getMessageText())
                    .uiType("SIMPLIFIED_PURCHASE_INTERFACE")
                    .uiData(balance)
                    .data(uiResponse.getKeyboard())
                    .build();

        } catch (Exception e) {
            log.error("‚ùå –§–ê–ó–ê2: –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —É–ø—Ä–æ—â–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞: {}", e.getMessage(), e);
            return TelegramResponse.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –ø–æ–∫—É–ø–∫–∏: " + e.getMessage());
        }
    }
}