package shit.back.telegram.commands.handlers;

import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;
import shit.back.service.UserSessionUnifiedService;
import shit.back.telegram.commands.ProcessCustomAmountCommand;
import shit.back.telegram.commands.TelegramCommandHandler;
import shit.back.telegram.dto.TelegramResponse;

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π —Å—É–º–º—ã
 * 
 * –ú–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω –∏–∑ application.telegram.handlers
 */
@Component
@Slf4j
public class ProcessCustomAmountCommandHandler implements TelegramCommandHandler<ProcessCustomAmountCommand> {

    @Autowired
    private UserSessionUnifiedService sessionService;

    public ProcessCustomAmountCommandHandler() {
        log.warn("üü¢ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –°–æ–∑–¥–∞–Ω ProcessCustomAmountCommandHandler –∏–∑ TELEGRAM –ø–∞–∫–µ—Ç–∞ (–ù–û–í–´–ô DDD)");
        log.warn("üü¢ –ü—É—Ç—å: {}", this.getClass().getPackage().getName());
    }

    @Override
    @Transactional
    public TelegramResponse handle(ProcessCustomAmountCommand command) throws Exception {
        log.info("üî¢ –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π —Å—É–º–º—ã: userId={}, input='{}', context={}",
                command.getUserId(), command.getUserInput(), command.getContext());

        try {
            // –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥—ã (–≤–∫–ª—é—á–∞–µ—Ç –ø–∞—Ä—Å–∏–Ω–≥ —Å—É–º–º—ã)
            command.validate();

            // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Å—Å–∏–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
            updateUserSessionForContext(command);

            // –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
            String responseMessage = formatResponseMessage(command);

            log.info("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è —Å—É–º–º–∞ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞: userId={}, amount={}, context={}",
                    command.getUserId(), command.getParsedAmount(), command.getContext());

            return TelegramResponse.successWithUI(
                    responseMessage,
                    "CUSTOM_AMOUNT_PROCESSED",
                    command.getParsedAmount());

        } catch (IllegalArgumentException e) {
            log.warn("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—É–º–º–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}: {}",
                    command.getUserId(), e.getMessage());
            return TelegramResponse.error(
                    "‚ùå " + e.getMessage() + "\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É (–Ω–∞–ø—Ä–∏–º–µ—Ä: 100 –∏–ª–∏ 50.25)");

        } catch (Exception e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π —Å—É–º–º—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}: {}",
                    command.getUserId(), e.getMessage(), e);
            return TelegramResponse.error("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤–≤–µ–¥–µ–Ω–Ω—É—é —Å—É–º–º—É: " + e.getMessage());
        }
    }

    @Override
    public Class<ProcessCustomAmountCommand> getCommandType() {
        return ProcessCustomAmountCommand.class;
    }

    @Override
    public int getHandlerPriority() {
        return 50; // –í—ã—Å–æ–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –≤–≤–æ–¥–∞
    }

    @Override
    public String getDescription() {
        return "–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Å—É–º–º —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π –∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π";
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Å—Å–∏–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
     */
    private void updateUserSessionForContext(ProcessCustomAmountCommand command) {
        try {
            shit.back.model.UserSession.SessionState newState;

            switch (command.getContext().toLowerCase()) {
                case "topup":
                case "–ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ":
                    newState = shit.back.model.UserSession.SessionState.TOPPING_UP_BALANCE;
                    break;
                case "payment":
                case "–æ–ø–ª–∞—Ç–∞":
                    newState = shit.back.model.UserSession.SessionState.SELECTING_PAYMENT_TYPE;
                    break;
                default:
                    newState = shit.back.model.UserSession.SessionState.ENTERING_CUSTOM_AMOUNT;
                    break;
            }

            sessionService.updateSessionState(command.getUserId(), newState);

        } catch (Exception e) {
            log.warn("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Å—Å–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}: {}",
                    command.getUserId(), e.getMessage());
            // –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ —Å–µ—Å—Å–∏–∏
        }
    }

    /**
     * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
     */
    private String formatResponseMessage(ProcessCustomAmountCommand command) {
        StringBuilder message = new StringBuilder();

        message.append("‚úÖ <b>–°—É–º–º–∞ –ø—Ä–∏–Ω—è—Ç–∞!</b>\n\n");
        message.append("üí∞ <b>–í–≤–µ–¥–µ–Ω–Ω–∞—è —Å—É–º–º–∞:</b> ").append(command.getParsedAmount())
                .append(" ").append(command.getCurrency()).append("\n\n");

        // –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ-–∑–∞–≤–∏—Å–∏–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        switch (command.getContext().toLowerCase()) {
            case "topup":
            case "–ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ":
                message.append("üîÑ <i>–ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤—ã–±–æ—Ä—É —Å–ø–æ—Å–æ–±–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞...</i>\n\n");
                message.append("–í—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–± –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è:");
                break;

            case "payment":
            case "–æ–ø–ª–∞—Ç–∞":
                message.append("üí≥ <i>–ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤—ã–±–æ—Ä—É —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã...</i>\n\n");
                message.append("–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –¥–ª—è —Å—É–º–º—ã ").append(command.getParsedAmount()).append(" ")
                        .append(command.getCurrency()).append(":");
                break;

            default:
                message.append("üìã <i>–°—É–º–º–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –∏ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é.</i>");
                break;
        }

        return message.toString();
    }
}