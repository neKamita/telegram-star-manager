package shit.back.telegram.queries.handlers;

import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;
import shit.back.application.balance.dto.response.SimpleBalanceResponse;
import shit.back.application.balance.service.BalanceApplicationFacade;
import shit.back.telegram.dto.TelegramResponse;
import shit.back.telegram.queries.ShowRichBalanceQuery;
import shit.back.telegram.queries.TelegramQueryHandler;
import shit.back.telegram.ui.strategy.BalanceDisplayStrategy;
import shit.back.telegram.ui.builder.TelegramKeyboardBuilder;

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –±–∞–ª–∞–Ω—Å–∞ —Å UI –æ–ø—Ü–∏—è–º–∏
 * 
 * –ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ—Ç—Å—è —Å BalanceDisplayStrategy –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –±–æ–≥–∞—Ç–æ–≥–æ UI
 */
@Component
@Slf4j
public class ShowRichBalanceQueryHandler implements TelegramQueryHandler<ShowRichBalanceQuery> {

    @Autowired
    private BalanceApplicationFacade balanceApplicationFacade;

    @Autowired
    private BalanceDisplayStrategy balanceDisplayStrategy;

    @Override
    @Transactional(readOnly = true)
    public TelegramResponse handle(ShowRichBalanceQuery query) throws Exception {
        log.info("üí∞ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å –±–∞–ª–∞–Ω—Å–∞: userId={}, format={}, history={}, stats={}",
                query.getUserId(), query.getDisplayFormat(), query.isIncludeHistory(), query.isIncludeStatistics());

        try {
            // –í–∞–ª–∏–¥–∞—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞
            query.validate();

            // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –±–∞–ª–∞–Ω—Å–∞
            var balanceResult = balanceApplicationFacade.getBalance(query.getUserId());

            if (!balanceResult.isSuccess()) {
                String error = "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–∞–ª–∞–Ω—Å–µ";
                log.error("‚ùå {} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}", error, query.getUserId());
                return TelegramResponse.error(error);
            }

            // –ü–æ–ª—É—á–∞–µ–º SimpleBalanceResponse –∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
            SimpleBalanceResponse balanceData = extractBalanceData(balanceResult);
            if (balanceData == null) {
                String error = "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –±–∞–ª–∞–Ω—Å–∞";
                log.error("‚ùå {} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}", error, query.getUserId());
                return TelegramResponse.error(error);
            }

            // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ —Å—Ç—Ä–∞—Ç–µ–≥–∏—é
            String formattedMessage = balanceDisplayStrategy.formatContent(query.getDisplayFormat(), balanceData);

            // –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –µ—Å–ª–∏ –∑–∞–ø—Ä–æ—à–µ–Ω–∞
            if (query.isIncludeHistory() || query.isIncludeStatistics()) {
                formattedMessage = enhanceMessage(formattedMessage, query, balanceData);
            }

            // –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏ –¥–ª—è –±–∞–ª–∞–Ω—Å–∞
            var keyboard = new TelegramKeyboardBuilder()
                    .addButton("‚≠ê –ö—É–ø–∏—Ç—å –∑–≤–µ–∑–¥—ã", "buy_stars")
                    .newRow()
                    .addButton("üìã –ò—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π", "show_history")
                    .addButton("üí≥ –ü–æ–ø–æ–ª–Ω–∏—Ç—å", "topup_balance")
                    .newRow()
                    .addButton("üîÑ –û–±–Ω–æ–≤–∏—Ç—å", "refresh_balance")
                    .build();

            log.info("‚úÖ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –±–∞–ª–∞–Ω—Å —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {}", query.getUserId());

            return TelegramResponse.builder()
                    .successful(true)
                    .message(formattedMessage)
                    .uiType(query.getDisplayFormat())
                    .uiData(balanceData)
                    .data(keyboard)
                    .build();

        } catch (IllegalArgumentException e) {
            log.warn("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∑–∞–ø—Ä–æ—Å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}: {}", query.getUserId(), e.getMessage());
            return TelegramResponse.error("‚ùå " + e.getMessage());

        } catch (Exception e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}: {}",
                    query.getUserId(), e.getMessage(), e);
            return TelegramResponse.error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–∞–ª–∞–Ω—Å–µ: " + e.getMessage());
        }
    }

    @Override
    public Class<ShowRichBalanceQuery> getQueryType() {
        return ShowRichBalanceQuery.class;
    }

    @Override
    public int getHandlerPriority() {
        return 10; // –û—á–µ–Ω—å –≤—ã—Å–æ–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –¥–ª—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞
    }

    @Override
    public boolean supportsCaching() {
        return true; // –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ
    }

    @Override
    public String getDescription() {
        return "–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –±–∞–ª–∞–Ω—Å–∞ —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π BalanceDisplayStrategy";
    }

    /**
     * –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –±–∞–ª–∞–Ω—Å–∞ –∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
     */
    private SimpleBalanceResponse extractBalanceData(Object balanceResult) {
        try {
            // –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å SimpleBalanceResponse –Ω–∞–ø—Ä—è–º—É—é
            if (balanceResult instanceof SimpleBalanceResponse) {
                return (SimpleBalanceResponse) balanceResult;
            }

            // TODO: –ó–¥–µ—Å—å –º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è –º–∞–ø–ø–∏–Ω–≥ –¥—Ä—É–≥–∏—Ö —Ç–∏–ø–æ–≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
            log.warn("‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ç–∏–ø —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –±–∞–ª–∞–Ω—Å–∞: {}",
                    balanceResult != null ? balanceResult.getClass().getSimpleName() : "null");
            return null;

        } catch (Exception e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –±–∞–ª–∞–Ω—Å–∞: {}", e.getMessage(), e);
            return null;
        }
    }

    /**
     * –î–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–µ–π –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
     */
    private String enhanceMessage(String baseMessage, ShowRichBalanceQuery query, SimpleBalanceResponse balanceData) {
        StringBuilder enhanced = new StringBuilder(baseMessage);

        if (query.isIncludeHistory()) {
            enhanced.append("\n\nüìà <b>–ò—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π:</b>\n");
            enhanced.append("‚Ä¢ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø–µ—Ä–µ–≤–æ–¥—ã —Å—Ä–µ–¥—Å—Ç–≤\n");
            enhanced.append("‚Ä¢ –ü–æ–∫—É–ø–∫–∏ –∑–≤–µ–∑–¥\n");
            enhanced.append("‚Ä¢ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞\n");
            // TODO: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Ä–µ–∞–ª—å–Ω–æ–π –∏—Å—Ç–æ—Ä–∏–µ–π –æ–ø–µ—Ä–∞—Ü–∏–π
        }

        if (query.isIncludeStatistics()) {
            enhanced.append("\n\nüìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>\n");
            enhanced.append(String.format("‚Ä¢ –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: %s\n",
                    balanceData.getFormattedBalance()));
            enhanced.append("‚Ä¢ –°—Ç–∞—Ç—É—Å: ").append(balanceData.isActive() ? "–ê–∫—Ç–∏–≤–µ–Ω" : "–ù–µ–∞–∫—Ç–∏–≤–µ–Ω").append("\n");
            enhanced.append("‚Ä¢ –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: ").append(
                    balanceData.getFormattedLastUpdated());
        }

        return enhanced.toString();
    }
}