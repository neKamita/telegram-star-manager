package shit.back.telegram.ui;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import shit.back.application.balance.dto.response.DualBalanceResponse;
import shit.back.domain.balance.valueobjects.Currency;
import shit.back.domain.balance.valueobjects.Money;
import shit.back.telegram.ui.builder.AdvancedKeyboardBuilder;
import shit.back.telegram.ui.builder.RichMessageBuilder;
import shit.back.telegram.ui.builder.TelegramMessageBuilder;
import shit.back.telegram.ui.builder.TelegramKeyboardBuilder;
import shit.back.telegram.ui.factory.TelegramKeyboardFactory;
import shit.back.telegram.ui.factory.TelegramMessageFactory;
import shit.back.telegram.ui.strategy.BalanceDisplayStrategy;
import shit.back.telegram.ui.strategy.StarPurchaseFlowStrategy;
import shit.back.telegram.ui.strategy.WelcomeCardStrategy;

import java.util.List;

/**
 * –ì–ª–∞–≤–Ω–∞—è UI Factory –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è Telegram –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
 *
 * –û–±—ä–µ–¥–∏–Ω—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –≤—Å–µ—Ö UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –≤ –µ–¥–∏–Ω—É—é —Ñ–∞–±—Ä–∏–∫—É
 * —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã—Ö –∫–ª–∞–≤–∏–∞—Ç—É—Ä –∏ –±–æ–≥–∞—Ç—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
 */
@Component
public class TelegramUIFactory {

    @Autowired
    private TelegramMessageFactory messageFactory;

    @Autowired
    private TelegramKeyboardFactory keyboardFactory;

    @Autowired
    private AdvancedKeyboardBuilder advancedKeyboardBuilder;

    @Autowired
    private RichMessageBuilder richMessageBuilder;

    @Autowired
    private BalanceDisplayStrategy balanceDisplayStrategy;

    @Autowired
    private StarPurchaseFlowStrategy starPurchaseFlowStrategy;

    @Autowired
    private WelcomeCardStrategy welcomeCardStrategy;

    // === –ë–ê–ó–û–í–´–ï –§–ê–ë–†–ò–ö–ò ===

    /**
     * –ü–æ–ª—É—á–∏—Ç—å MessageFactory
     */
    public TelegramMessageFactory messageFactory() {
        return messageFactory;
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å KeyboardFactory
     */
    public TelegramKeyboardFactory keyboardFactory() {
        return keyboardFactory;
    }

    /**
     * –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π MessageBuilder
     */
    public TelegramMessageBuilder messageBuilder() {
        return new TelegramMessageBuilder(messageFactory);
    }

    /**
     * –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π KeyboardBuilder
     */
    public TelegramKeyboardBuilder keyboardBuilder() {
        return new TelegramKeyboardBuilder();
    }

    // === –†–ê–°–®–ò–†–ï–ù–ù–´–ï BUILDERS ===

    /**
     * –ü–æ–ª—É—á–∏—Ç—å AdvancedKeyboardBuilder
     */
    public AdvancedKeyboardBuilder advancedKeyboardBuilder() {
        return advancedKeyboardBuilder;
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å RichMessageBuilder
     */
    public RichMessageBuilder richMessageBuilder() {
        return richMessageBuilder;
    }

    // === READY-TO-USE UI –ö–û–ú–ü–û–ù–ï–ù–¢–´ ===

    /**
     * –°–æ–∑–¥–∞—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫—Ä–∞—Å–∏–≤–æ–π –∫–∞—Ä—Ç–æ—á–∫–æ–π
     */
    public TelegramUIResponse createWelcomeMessage(Long chatId, String userName, DualBalanceResponse balance) {
        String welcomeText = richMessageBuilder.createWelcomeCard(userName, balance);
        InlineKeyboardMarkup keyboard = keyboardFactory.createMainMenu();

        return messageBuilder()
                .chatId(chatId)
                .text(welcomeText)
                .keyboard(keyboard)
                .build();
    }

    /**
     * –°–æ–∑–¥–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –±–∞–ª–∞–Ω—Å–æ–º –∏—Å–ø–æ–ª—å–∑—É—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—é
     */
    public TelegramUIResponse createBalanceMessage(Long chatId, DualBalanceResponse balance) {
        String balanceText = balanceDisplayStrategy.formatContent("DUAL_BALANCE_INFO", balance);
        InlineKeyboardMarkup keyboard = advancedKeyboardBuilder.createBalanceActionsKeyboard(
                balance.hasMainFunds(), balance.hasBankFunds());

        return messageBuilder()
                .chatId(chatId)
                .text(balanceText)
                .keyboard(keyboard)
                .build();
    }

    /**
     * –°–æ–∑–¥–∞—Ç—å –∫—Ä–∞—Å–∏–≤—É—é –∫–∞—Ä—Ç–æ—á–∫—É –±–∞–ª–∞–Ω—Å–∞
     */
    public TelegramUIResponse createRichBalanceCard(Long chatId, DualBalanceResponse balance) {
        String balanceCard = richMessageBuilder.createBalanceCard(balance);
        InlineKeyboardMarkup keyboard = advancedKeyboardBuilder.createBalanceActionsKeyboard(
                balance.hasMainFunds(), balance.hasBankFunds());

        return messageBuilder()
                .chatId(chatId)
                .text(balanceCard)
                .keyboard(keyboard)
                .build();
    }

    /**
     * –°–æ–∑–¥–∞—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø–æ–∫—É–ø–∫–∏ –∑–≤–µ–∑–¥
     */
    public TelegramUIResponse createStarPurchaseInterface(Long chatId, DualBalanceResponse balance) {
        String purchaseText = starPurchaseFlowStrategy.formatContent("PURCHASE_INTERFACE", balance);
        InlineKeyboardMarkup keyboard = advancedKeyboardBuilder.createStarPackageKeyboard(
                balance.getCurrency(), balance.hasMainFunds());

        return messageBuilder()
                .chatId(chatId)
                .text(purchaseText)
                .keyboard(keyboard)
                .build();
    }

    /**
     * –°–æ–∑–¥–∞—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–∫—É–ø–∫–∏ –∑–≤–µ–∑–¥
     */
    public TelegramUIResponse createStarPurchaseConfirmation(Long chatId, int stars, Money amount,
            String currencySymbol, DualBalanceResponse balance) {
        String confirmationCard = richMessageBuilder.createPurchaseFlowCard(stars, amount, currencySymbol, balance);
        InlineKeyboardMarkup keyboard = advancedKeyboardBuilder.createPurchaseConfirmationKeyboard("stars",
                String.valueOf(stars));

        return messageBuilder()
                .chatId(chatId)
                .text(confirmationCard)
                .keyboard(keyboard)
                .build();
    }

    /**
     * –°–æ–∑–¥–∞—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
     */
    public TelegramUIResponse createTopupInterface(Long chatId, Currency currency) {
        InlineKeyboardMarkup amountKeyboard = advancedKeyboardBuilder.createTopupAmountKeyboard(currency);
        String topupText = String.format("""
                üí≥ <b>–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞</b>

                üí± –í–∞–ª—é—Ç–∞: %s

                –í—ã–±–µ—Ä–∏—Ç–µ —Å—É–º–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ—é:
                """, currency.getFormattedName());

        return messageBuilder()
                .chatId(chatId)
                .text(topupText)
                .keyboard(amountKeyboard)
                .build();
    }

    /**
     * –°–æ–∑–¥–∞—Ç—å –≤—ã–±–æ—Ä —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã
     */
    public TelegramUIResponse createPaymentMethodSelection(Long chatId, Currency currency, Money amount) {
        InlineKeyboardMarkup methodKeyboard = advancedKeyboardBuilder.createPaymentMethodKeyboard(currency);
        String methodText = String.format("""
                üí≥ <b>–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã</b>

                üí∞ –°—É–º–º–∞: %s %s
                üí± –í–∞–ª—é—Ç–∞: %s

                –í—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:
                """, amount.getFormattedAmount(), currency.getSymbol(), currency.getFormattedName());

        return messageBuilder()
                .chatId(chatId)
                .text(methodText)
                .keyboard(methodKeyboard)
                .build();
    }

    /**
     * –°–æ–∑–¥–∞—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–µ—Ä–µ–≤–æ–¥–∞ —Å—Ä–µ–¥—Å—Ç–≤
     */
    public TelegramUIResponse createTransferConfirmation(Long chatId, Money amount, String currencySymbol,
            DualBalanceResponse balance) {
        String transferCard = richMessageBuilder.createTransferConfirmationCard(amount, currencySymbol, balance);
        InlineKeyboardMarkup keyboard = advancedKeyboardBuilder.createTransferConfirmationKeyboard(
                amount.getFormattedAmount());

        return messageBuilder()
                .chatId(chatId)
                .text(transferCard)
                .keyboard(keyboard)
                .build();
    }

    /**
     * –°–æ–∑–¥–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é –ø–æ–∫—É–ø–æ–∫
     */
    public TelegramUIResponse createPurchaseHistory(Long chatId, List<RichMessageBuilder.PurchaseHistoryItem> purchases,
            int page, boolean hasNext) {
        String historyCard = richMessageBuilder.createPurchaseHistoryCard(purchases, page, hasNext);
        InlineKeyboardMarkup keyboard = advancedKeyboardBuilder.createHistoryNavigationKeyboard(
                "purchases", page, hasNext, page > 0);

        return messageBuilder()
                .chatId(chatId)
                .text(historyCard)
                .keyboard(keyboard)
                .build();
    }

    /**
     * –°–æ–∑–¥–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
     */
    public TelegramUIResponse createErrorMessage(Long chatId, String errorText) {
        return messageBuilder()
                .chatId(chatId)
                .text("‚ùå <b>–û—à–∏–±–∫–∞</b>\n\n" + errorText)
                .keyboard(keyboardFactory.createBackToMain())
                .build();
    }

    /**
     * –°–æ–∑–¥–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–µ —Å—Ä–µ–¥—Å—Ç–≤
     */
    public TelegramUIResponse createInsufficientFundsMessage(Long chatId, DualBalanceResponse balance,
            Money required, int requestedStars) {
        StarPurchaseFlowStrategy.InsufficientFundsData data = new StarPurchaseFlowStrategy.InsufficientFundsData(
                balance, required, requestedStars);

        String insufficientText = starPurchaseFlowStrategy.formatContent("INSUFFICIENT_FUNDS", data);
        InlineKeyboardMarkup keyboard = advancedKeyboardBuilder.createBalanceActionsKeyboard(
                balance.hasMainFunds(), balance.hasBankFunds());

        return messageBuilder()
                .chatId(chatId)
                .text(insufficientText)
                .keyboard(keyboard)
                .build();
    }

    // === LEGACY –ú–ï–¢–û–î–´ –î–õ–Ø –°–û–í–ú–ï–°–¢–ò–ú–û–°–¢–ò ===

    /**
     * @deprecated –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ createWelcomeMessage(Long, String,
     *             DualBalanceResponse)
     */
    @Deprecated
    public TelegramUIResponse createWelcomeMessage(Long chatId, String userName) {
        return createWelcomeMessage(chatId, userName, null);
    }

    /**
     * @deprecated –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ createBalanceMessage(Long, DualBalanceResponse)
     */
    @Deprecated
    public TelegramUIResponse createBalanceMessage(Long chatId, Object balanceData, String userName) {
        if (balanceData instanceof DualBalanceResponse) {
            return createBalanceMessage(chatId, (DualBalanceResponse) balanceData);
        }
        return createErrorMessage(chatId, "–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö –±–∞–ª–∞–Ω—Å–∞");
    }

    /**
     * @deprecated –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ createTopupInterface(Long, Currency)
     */
    @Deprecated
    public TelegramUIResponse createTopupMessage(Long chatId, Object balanceData) {
        Currency currency = Currency.defaultCurrency();
        if (balanceData instanceof DualBalanceResponse) {
            currency = ((DualBalanceResponse) balanceData).getCurrency();
        }
        return createTopupInterface(chatId, currency);
    }
}