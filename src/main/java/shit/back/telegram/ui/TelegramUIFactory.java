package shit.back.telegram.ui;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import shit.back.application.balance.dto.response.SimpleBalanceResponse;
import shit.back.application.balance.dto.response.SimpleBalanceResponse;
import shit.back.domain.balance.valueobjects.Currency;
import shit.back.domain.balance.valueobjects.Money;
import shit.back.telegram.ui.builder.AdvancedKeyboardBuilder;
import shit.back.telegram.ui.builder.TelegramMessageBuilder;
import shit.back.telegram.ui.builder.TelegramKeyboardBuilder;
import shit.back.telegram.ui.factory.TelegramKeyboardFactory;
import shit.back.telegram.ui.factory.TelegramMessageFactory;
import shit.back.telegram.ui.strategy.BalanceDisplayStrategy;
import shit.back.telegram.ui.strategy.SimplifiedBalanceDisplayStrategy;
import shit.back.telegram.ui.strategy.StarPurchaseFlowStrategy;
import shit.back.telegram.ui.strategy.SimplifiedStarPurchaseStrategy;
import shit.back.telegram.ui.strategy.WelcomeCardStrategy;

import java.util.List;

/**
 * –ì–ª–∞–≤–Ω–∞—è UI Factory –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è Telegram –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
 *
 * –û–±—ä–µ–¥–∏–Ω—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –≤—Å–µ—Ö UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –≤ –µ–¥–∏–Ω—É—é —Ñ–∞–±—Ä–∏–∫—É
 * —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã—Ö –∫–ª–∞–≤–∏–∞—Ç—É—Ä –∏ –±–æ–≥–∞—Ç—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
 */
@Component
public class TelegramUIFactory {

    @Autowired
    private TelegramMessageFactory messageFactory;

    @Autowired
    private TelegramKeyboardFactory keyboardFactory;

    @Autowired
    private AdvancedKeyboardBuilder advancedKeyboardBuilder;

    @Autowired
    private BalanceDisplayStrategy balanceDisplayStrategy;

    @Autowired
    private SimplifiedBalanceDisplayStrategy simplifiedBalanceDisplayStrategy;

    @Autowired
    private StarPurchaseFlowStrategy starPurchaseFlowStrategy;

    @Autowired
    private SimplifiedStarPurchaseStrategy simplifiedStarPurchaseStrategy;

    @Autowired
    private WelcomeCardStrategy welcomeCardStrategy;

    // === –ë–ê–ó–û–í–´–ï –§–ê–ë–†–ò–ö–ò ===

    /**
     * –ü–æ–ª—É—á–∏—Ç—å MessageFactory
     */
    public TelegramMessageFactory messageFactory() {
        return messageFactory;
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å KeyboardFactory
     */
    public TelegramKeyboardFactory keyboardFactory() {
        return keyboardFactory;
    }

    /**
     * –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π MessageBuilder
     */
    public TelegramMessageBuilder messageBuilder() {
        return new TelegramMessageBuilder(messageFactory);
    }

    /**
     * –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π KeyboardBuilder
     */
    public TelegramKeyboardBuilder keyboardBuilder() {
        return new TelegramKeyboardBuilder();
    }

    // === –†–ê–°–®–ò–†–ï–ù–ù–´–ï BUILDERS ===

    /**
     * –ü–æ–ª—É—á–∏—Ç—å AdvancedKeyboardBuilder
     */
    public AdvancedKeyboardBuilder advancedKeyboardBuilder() {
        return advancedKeyboardBuilder;
    }

    // === READY-TO-USE UI –ö–û–ú–ü–û–ù–ï–ù–¢–´ ===

    /**
     * –°–æ–∑–¥–∞—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–æ—Å—Ç–æ–π –∫–∞—Ä—Ç–æ—á–∫–æ–π
     */
    public TelegramUIResponse createWelcomeMessage(Long chatId, String userName, SimpleBalanceResponse balance) {
        String welcomeText = String.format("""
                üéâ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, %s!</b>

                üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: %s
                üåü –ì–æ—Ç–æ–≤ –∫ –ø–æ–∫—É–ø–∫–µ –∑–≤–µ–∑–¥ Telegram!

                –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –Ω–∏–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.
                """,
                userName != null ? userName : "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
                balance != null ? balance.getFormattedBalance() : "0.00 $");

        InlineKeyboardMarkup keyboard = keyboardFactory.createMainMenu();

        return messageBuilder()
                .chatId(chatId)
                .text(welcomeText)
                .keyboard(keyboard)
                .build();
    }

    /**
     * –°–æ–∑–¥–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –±–∞–ª–∞–Ω—Å–æ–º –∏—Å–ø–æ–ª—å–∑—É—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—é
     */
    public TelegramUIResponse createBalanceMessage(Long chatId, SimpleBalanceResponse balance) {
        String balanceText = balanceDisplayStrategy.formatContent("BALANCE_INFO", balance);
        InlineKeyboardMarkup keyboard = advancedKeyboardBuilder.createBalanceActionsKeyboard(
                balance.getCurrentBalance().isPositive(), false);

        return messageBuilder()
                .chatId(chatId)
                .text(balanceText)
                .keyboard(keyboard)
                .build();
    }

    /**
     * –°–æ–∑–¥–∞—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É –±–∞–ª–∞–Ω—Å–∞
     */
    public TelegramUIResponse createRichBalanceCard(Long chatId, SimpleBalanceResponse balance) {
        String balanceCard = String.format("""
                üí∞ <b>–ë–∞–ª–∞–Ω—Å</b>

                üíµ –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: %s
                üí± –í–∞–ª—é—Ç–∞: %s
                üìÖ –û–±–Ω–æ–≤–ª–µ–Ω: %s
                %s
                """,
                balance.getFormattedBalance(),
                balance.getCurrency().getFormattedName(),
                balance.getFormattedLastUpdated(),
                balance.isActive() ? "‚úÖ –ê–∫—Ç–∏–≤–µ–Ω" : "‚ùå –ù–µ–∞–∫—Ç–∏–≤–µ–Ω");

        InlineKeyboardMarkup keyboard = advancedKeyboardBuilder.createBalanceActionsKeyboard(
                balance.getCurrentBalance().isPositive(), false);

        return messageBuilder()
                .chatId(chatId)
                .text(balanceCard)
                .keyboard(keyboard)
                .build();
    }

    /**
     * –°–æ–∑–¥–∞—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø–æ–∫—É–ø–∫–∏ –∑–≤–µ–∑–¥
     */
    public TelegramUIResponse createStarPurchaseInterface(Long chatId, SimpleBalanceResponse balance) {
        String purchaseText = starPurchaseFlowStrategy.formatContent("PURCHASE_INTERFACE", balance);
        InlineKeyboardMarkup keyboard = advancedKeyboardBuilder.createStarPackageKeyboard(
                balance.getCurrency(), balance.getCurrentBalance().isPositive());

        return messageBuilder()
                .chatId(chatId)
                .text(purchaseText)
                .keyboard(keyboard)
                .build();
    }

    /**
     * –°–æ–∑–¥–∞—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–∫—É–ø–∫–∏ –∑–≤–µ–∑–¥
     */
    public TelegramUIResponse createStarPurchaseConfirmation(Long chatId, int stars, Money amount,
            String currencySymbol, SimpleBalanceResponse balance) {
        String confirmationCard = String.format("""
                ‚≠ê <b>–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–∫—É–ø–∫–∏</b>

                üåü –ó–≤–µ–∑–¥—ã: %d
                üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: %s %s
                üíµ –ë–∞–ª–∞–Ω—Å: %s

                –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–æ–∫—É–ø–∫—É:
                """,
                stars,
                amount.getFormattedAmount(),
                currencySymbol,
                balance.getFormattedBalance());

        InlineKeyboardMarkup keyboard = advancedKeyboardBuilder.createPurchaseConfirmationKeyboard("stars",
                String.valueOf(stars));

        return messageBuilder()
                .chatId(chatId)
                .text(confirmationCard)
                .keyboard(keyboard)
                .build();
    }

    /**
     * –°–æ–∑–¥–∞—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
     */
    public TelegramUIResponse createTopupInterface(Long chatId, Currency currency) {
        InlineKeyboardMarkup amountKeyboard = advancedKeyboardBuilder.createTopupAmountKeyboard(currency);
        String topupText = String.format("""
                üí≥ <b>–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞</b>

                üí± –í–∞–ª—é—Ç–∞: %s

                –í—ã–±–µ—Ä–∏—Ç–µ —Å—É–º–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ—é:
                """, currency.getFormattedName());

        return messageBuilder()
                .chatId(chatId)
                .text(topupText)
                .keyboard(amountKeyboard)
                .build();
    }

    /**
     * –°–æ–∑–¥–∞—Ç—å –≤—ã–±–æ—Ä —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã
     */
    public TelegramUIResponse createPaymentMethodSelection(Long chatId, Currency currency, Money amount) {
        InlineKeyboardMarkup methodKeyboard = advancedKeyboardBuilder.createPaymentMethodKeyboard(currency);
        String methodText = String.format("""
                üí≥ <b>–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã</b>

                üí∞ –°—É–º–º–∞: %s %s
                üí± –í–∞–ª—é—Ç–∞: %s

                –í—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:
                """, amount.getFormattedAmount(), currency.getSymbol(), currency.getFormattedName());

        return messageBuilder()
                .chatId(chatId)
                .text(methodText)
                .keyboard(methodKeyboard)
                .build();
    }

    /**
     * –°–æ–∑–¥–∞—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–µ—Ä–µ–≤–æ–¥–∞ —Å—Ä–µ–¥—Å—Ç–≤
     */
    public TelegramUIResponse createTransferConfirmation(Long chatId, Money amount, String currencySymbol,
            SimpleBalanceResponse balance) {
        String transferCard = String.format("""
                üí∏ <b>–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–µ—Ä–µ–≤–æ–¥–∞</b>

                üí∞ –°—É–º–º–∞: %s %s
                üíµ –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: %s

                –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –æ–ø–µ—Ä–∞—Ü–∏—é –ø–µ—Ä–µ–≤–æ–¥–∞:
                """,
                amount.getFormattedAmount(),
                currencySymbol,
                balance.getFormattedBalance());

        InlineKeyboardMarkup keyboard = advancedKeyboardBuilder.createTransferConfirmationKeyboard(
                amount.getFormattedAmount());

        return messageBuilder()
                .chatId(chatId)
                .text(transferCard)
                .keyboard(keyboard)
                .build();
    }

    /**
     * –°–æ–∑–¥–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é –ø–æ–∫—É–ø–æ–∫ (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
     */
    public TelegramUIResponse createPurchaseHistory(Long chatId, String historyText, int page, boolean hasNext) {
        String historyCard = String.format("""
                üìã <b>–ò—Å—Ç–æ—Ä–∏—è –ø–æ–∫—É–ø–æ–∫</b>

                %s

                üìÑ –°—Ç—Ä–∞–Ω–∏—Ü–∞: %d
                """,
                historyText != null ? historyText : "–ò—Å—Ç–æ—Ä–∏—è –ø—É—Å—Ç–∞",
                page + 1);

        InlineKeyboardMarkup keyboard = advancedKeyboardBuilder.createHistoryNavigationKeyboard(
                "purchases", page, hasNext, page > 0);

        return messageBuilder()
                .chatId(chatId)
                .text(historyCard)
                .keyboard(keyboard)
                .build();
    }

    /**
     * –°–æ–∑–¥–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
     */
    public TelegramUIResponse createErrorMessage(Long chatId, String errorText) {
        return messageBuilder()
                .chatId(chatId)
                .text("‚ùå <b>–û—à–∏–±–∫–∞</b>\n\n" + errorText)
                .keyboard(keyboardFactory.createBackToMain())
                .build();
    }

    /**
     * –°–æ–∑–¥–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–µ —Å—Ä–µ–¥—Å—Ç–≤
     */
    public TelegramUIResponse createInsufficientFundsMessage(Long chatId, SimpleBalanceResponse balance,
            Money required, int requestedStars) {
        StarPurchaseFlowStrategy.InsufficientFundsData data = new StarPurchaseFlowStrategy.InsufficientFundsData(
                balance, required, requestedStars);

        String insufficientText = starPurchaseFlowStrategy.formatContent("INSUFFICIENT_FUNDS", data);
        InlineKeyboardMarkup keyboard = advancedKeyboardBuilder.createBalanceActionsKeyboard(
                balance.getCurrentBalance().isPositive(), false);

        return messageBuilder()
                .chatId(chatId)
                .text(insufficientText)
                .keyboard(keyboard)
                .build();
    }

    // === –§–ê–ó–ê 2: –£–ü–†–û–©–ï–ù–ù–´–ï –ú–ï–¢–û–î–´ ===

    /**
     * –§–ê–ó–ê 2: –°–æ–∑–¥–∞–Ω–∏–µ —É–ø—Ä–æ—â–µ–Ω–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
     */
    public TelegramUIResponse createSimplifiedBalanceDisplay(Long chatId, SimpleBalanceResponse balance) {
        var uiResponse = simplifiedBalanceDisplayStrategy.createBalanceDisplay(balance);

        // –ö–æ–ø–∏—Ä—É–µ–º chatId –∏–∑ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞, —Ç–∞–∫ –∫–∞–∫ —Å—Ç—Ä–∞—Ç–µ–≥–∏—è –º–æ–∂–µ—Ç –Ω–µ –∑–∞–¥–∞—Ç—å –µ–≥–æ
        return TelegramUIResponse.newMessage(chatId, uiResponse.getMessageText())
                .keyboard(uiResponse.getKeyboard())
                .parseMode(uiResponse.getParseMode())
                .build();
    }

    /**
     * –§–ê–ó–ê 2: –°–æ–∑–¥–∞–Ω–∏–µ —É–ø—Ä–æ—â–µ–Ω–Ω–æ–≥–æ –ø–æ—Ç–æ–∫–∞ –ø–æ–∫—É–ø–∫–∏ –∑–≤–µ–∑–¥
     */
    public TelegramUIResponse createSimplifiedStarPurchaseFlow(Long chatId, SimpleBalanceResponse balance) {
        var uiResponse = simplifiedStarPurchaseStrategy.createStarPurchaseFlow(balance);

        // –ö–æ–ø–∏—Ä—É–µ–º chatId –∏–∑ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
        return TelegramUIResponse.newMessage(chatId, uiResponse.getMessageText())
                .keyboard(uiResponse.getKeyboard())
                .parseMode(uiResponse.getParseMode())
                .build();
    }

    /**
     * –§–ê–ó–ê 2: –ü–æ–ª—É—á–µ–Ω–∏–µ —É–ø—Ä–æ—â–µ–Ω–Ω–æ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
     */
    public SimplifiedBalanceDisplayStrategy getSimplifiedBalanceDisplayStrategy() {
        return simplifiedBalanceDisplayStrategy;
    }

    /**
     * –§–ê–ó–ê 2: –ü–æ–ª—É—á–µ–Ω–∏–µ —É–ø—Ä–æ—â–µ–Ω–Ω–æ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –ø–æ–∫—É–ø–∫–∏ –∑–≤–µ–∑–¥
     */
    public SimplifiedStarPurchaseStrategy getSimplifiedStarPurchaseStrategy() {
        return simplifiedStarPurchaseStrategy;
    }

    // === LEGACY –ú–ï–¢–û–î–´ –î–õ–Ø –°–û–í–ú–ï–°–¢–ò–ú–û–°–¢–ò ===

    /**
     * @deprecated –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ createWelcomeMessage(Long, String,
     *             SimpleBalanceResponse)
     */
    @Deprecated
    public TelegramUIResponse createWelcomeMessage(Long chatId, String userName) {
        return createWelcomeMessage(chatId, userName, null);
    }

    /**
     * @deprecated –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ createBalanceMessage(Long, SimpleBalanceResponse)
     */
    @Deprecated
    public TelegramUIResponse createBalanceMessage(Long chatId, Object balanceData, String userName) {
        if (balanceData instanceof SimpleBalanceResponse) {
            return createBalanceMessage(chatId, (SimpleBalanceResponse) balanceData);
        }
        return createErrorMessage(chatId, "–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö –±–∞–ª–∞–Ω—Å–∞");
    }

    /**
     * @deprecated –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ createTopupInterface(Long, Currency)
     */
    @Deprecated
    public TelegramUIResponse createTopupMessage(Long chatId, Object balanceData) {
        Currency currency = Currency.defaultCurrency();
        if (balanceData instanceof SimpleBalanceResponse) {
            currency = ((SimpleBalanceResponse) balanceData).getCurrency();
        }
        return createTopupInterface(chatId, currency);
    }
}