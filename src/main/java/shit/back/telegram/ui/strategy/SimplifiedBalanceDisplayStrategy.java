package shit.back.telegram.ui.strategy;

import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;
import shit.back.application.balance.dto.response.SimpleBalanceResponse;
import shit.back.telegram.ui.TelegramUIResponse;

import java.util.List;

/**
 * –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –µ–¥–∏–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞
 * 
 * –ó–∞–º–µ–Ω—è–µ—Ç —Å–ª–æ–∂–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ DualBalance –ø—Ä–æ—Å—Ç—ã–º –∏ –ø–æ–Ω—è—Ç–Ω—ã–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º
 * —Å –µ–¥–∏–Ω—ã–º –±–∞–ª–∞–Ω—Å–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
 * –°–ª–µ–¥—É–µ—Ç –ø—Ä–∏–Ω—Ü–∏–ø–∞–º SOLID, DRY, Clean Code, KISS.
 */
@Component
public class SimplifiedBalanceDisplayStrategy {

    private static final String BALANCE_EMOJI = "üí∞";
    private static final String STATUS_ACTIVE_EMOJI = "‚úÖ";
    private static final String STATUS_INACTIVE_EMOJI = "‚ùå";
    private static final String UPDATED_EMOJI = "üïê";

    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * 
     * @param balance –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * @return TelegramUIResponse —Å –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
     */
    public TelegramUIResponse createBalanceDisplay(SimpleBalanceResponse balance) {
        if (balance == null) {
            throw new IllegalArgumentException("SimpleBalanceResponse –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å null");
        }

        String messageText = formatSimpleBalance(balance);
        InlineKeyboardMarkup keyboard = createBalanceKeyboard(balance);

        return TelegramUIResponse.newMessage(balance.getUserId(), messageText)
                .keyboard(keyboard)
                .parseMode("HTML")
                .build();
    }

    /**
     * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞ –≤ —á–∏—Ç–∞–µ–º—É—é —Å—Ç—Ä–æ–∫—É
     * 
     * @param balance –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * @return –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ –±–∞–ª–∞–Ω—Å–∞
     */
    public String formatSimpleBalance(SimpleBalanceResponse balance) {
        if (balance == null) {
            return "‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞";
        }

        StringBuilder message = new StringBuilder();

        // –ó–∞–≥–æ–ª–æ–≤–æ–∫
        message.append("<b>").append(BALANCE_EMOJI).append(" –í–∞—à –±–∞–ª–∞–Ω—Å</b>\n\n");

        // –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–∞–ª–∞–Ω—Å–µ
        message.append("üíµ <b>–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å:</b> ")
                .append(balance.getFormattedBalance())
                .append("\n");

        // –°—Ç–∞—Ç—É—Å –±–∞–ª–∞–Ω—Å–∞
        String statusEmoji = balance.isActive() ? STATUS_ACTIVE_EMOJI : STATUS_INACTIVE_EMOJI;
        String statusText = balance.isActive() ? "–ê–∫—Ç–∏–≤–µ–Ω" : "–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω";
        message.append("üìä <b>–°—Ç–∞—Ç—É—Å:</b> ")
                .append(statusEmoji)
                .append(" ")
                .append(statusText)
                .append("\n");

        // –î–∞—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        message.append(UPDATED_EMOJI)
                .append(" <b>–û–±–Ω–æ–≤–ª–µ–Ω:</b> ")
                .append(balance.getFormattedLastUpdated())
                .append("\n\n");

        // –ü–æ–¥—Å–∫–∞–∑–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if (balance.isActive()) {
            if (balance.getCurrentBalance().isPositive()) {
                message.append("üåü <i>–í—ã –º–æ–∂–µ—Ç–µ –∫—É–ø–∏—Ç—å –∑–≤–µ–∑–¥—ã Telegram!</i>");
            } else {
                message.append("üí≥ <i>–ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –∑–≤–µ–∑–¥</i>");
            }
        } else {
            message.append("‚ö†Ô∏è <i>–ë–∞–ª–∞–Ω—Å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.</i>");
        }

        return message.toString();
    }

    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–æ–º
     */
    private InlineKeyboardMarkup createBalanceKeyboard(SimpleBalanceResponse balance) {
        InlineKeyboardMarkup keyboard = new InlineKeyboardMarkup();

        // –ü–µ—Ä–≤—ã–π —Ä—è–¥ - –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
        InlineKeyboardButton topupButton = createButton("üí≥ –ü–æ–ø–æ–ª–Ω–∏—Ç—å", "topup_balance");
        InlineKeyboardButton historyButton = createButton("üìã –ò—Å—Ç–æ—Ä–∏—è", "balance_history");

        // –í—Ç–æ—Ä–æ–π —Ä—è–¥ - –ø–æ–∫—É–ø–∫–∞ –∑–≤–µ–∑–¥ (–µ—Å–ª–∏ –±–∞–ª–∞–Ω—Å –ø–æ–∑–≤–æ–ª—è–µ—Ç)
        if (balance.isActive() && balance.getCurrentBalance().isPositive()) {
            InlineKeyboardButton buyStarsButton = createButton("üåü –ö—É–ø–∏—Ç—å –∑–≤–µ–∑–¥—ã", "buy_stars");
            keyboard.setKeyboard(List.of(
                    List.of(topupButton, historyButton),
                    List.of(buyStarsButton)));
        } else {
            keyboard.setKeyboard(List.of(
                    List.of(topupButton, historyButton)));
        }

        return keyboard;
    }

    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
     */
    private InlineKeyboardButton createButton(String text, String callbackData) {
        InlineKeyboardButton button = new InlineKeyboardButton();
        button.setText(text);
        button.setCallbackData(callbackData);
        return button;
    }

    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ –∫—Ä–∞—Ç–∫–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –¥–ª—è –≤—Å—Ç—Ä–∞–∏–≤–∞–Ω–∏—è
     * 
     * @param balance –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * @return –∫—Ä–∞—Ç–∫–∞—è —Å—Ç—Ä–æ–∫–∞ —Å –±–∞–ª–∞–Ω—Å–æ–º
     */
    public String formatBalanceBrief(SimpleBalanceResponse balance) {
        if (balance == null || !balance.isActive()) {
            return "‚ùå –ë–∞–ª–∞–Ω—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω";
        }

        return String.format("%s –ë–∞–ª–∞–Ω—Å: %s",
                BALANCE_EMOJI,
                balance.getFormattedBalance());
    }

    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ –ø–æ–ª—É—á–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
     * 
     * @param userId       ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * @param errorMessage —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
     * @return TelegramUIResponse —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º –æ–± –æ—à–∏–±–∫–µ
     */
    public TelegramUIResponse createErrorDisplay(Long userId, String errorMessage) {
        String messageText = String.format(
                "‚ùå <b>–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞</b>\n\n" +
                        "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∞—à–µ–º –±–∞–ª–∞–Ω—Å–µ.\n" +
                        "<i>–ü—Ä–∏—á–∏–Ω–∞: %s</i>\n\n" +
                        "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.",
                errorMessage != null ? errorMessage : "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞");

        InlineKeyboardMarkup keyboard = new InlineKeyboardMarkup();
        InlineKeyboardButton retryButton = createButton("üîÑ –ü–æ–≤—Ç–æ—Ä–∏—Ç—å", "retry_balance");
        keyboard.setKeyboard(List.of(List.of(retryButton)));

        return TelegramUIResponse.newMessage(userId, messageText)
                .keyboard(keyboard)
                .parseMode("HTML")
                .build();
    }
}