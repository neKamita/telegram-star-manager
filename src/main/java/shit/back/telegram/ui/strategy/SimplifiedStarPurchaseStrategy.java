package shit.back.telegram.ui.strategy;

import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;
import shit.back.application.balance.dto.response.SimpleBalanceResponse;
import shit.back.domain.balance.valueobjects.Money;
import shit.back.telegram.ui.TelegramUIResponse;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

/**
 * –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è –ø–æ–∫—É–ø–∫–∏ –∑–≤–µ–∑–¥ —Å –µ–¥–∏–Ω—ã–º –±–∞–ª–∞–Ω—Å–æ–º
 * 
 * –ó–∞–º–µ–Ω—è–µ—Ç —Å–ª–æ–∂–Ω—É—é –ª–æ–≥–∏–∫—É —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä–æ–≤ –ø—Ä–æ—Å—Ç—ã–º –ø—Ä–æ—Ü–µ—Å—Å–æ–º –ø–æ–∫—É–ø–∫–∏
 * –Ω–∞–ø—Ä—è–º—É—é –∏–∑ –µ–¥–∏–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
 * –°–ª–µ–¥—É–µ—Ç –ø—Ä–∏–Ω—Ü–∏–ø–∞–º SOLID, DRY, Clean Code, KISS.
 */
@Component
public class SimplifiedStarPurchaseStrategy {

    private static final String STAR_EMOJI = "‚≠ê";
    private static final String MONEY_EMOJI = "üí∞";
    private static final String WARNING_EMOJI = "‚ö†Ô∏è";
    private static final String SUCCESS_EMOJI = "‚úÖ";

    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ —É–ø—Ä–æ—â–µ–Ω–Ω–æ–≥–æ –ø–æ—Ç–æ–∫–∞ –ø–æ–∫—É–ø–∫–∏ –∑–≤–µ–∑–¥
     * 
     * @param balance –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * @return TelegramUIResponse —Å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º –ø–æ–∫—É–ø–∫–∏
     */
    public TelegramUIResponse createStarPurchaseFlow(SimpleBalanceResponse balance) {
        if (balance == null) {
            throw new IllegalArgumentException("SimpleBalanceResponse –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å null");
        }

        if (!balance.isActive()) {
            return createInactiveBalanceMessage(balance.getUserId());
        }

        if (!balance.getCurrentBalance().isPositive()) {
            return createInsufficientFundsMessage(balance);
        }

        return createPurchaseMenu(balance);
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤ –∑–≤–µ–∑–¥ –¥–ª—è –ø–æ–∫—É–ø–∫–∏
     * 
     * @param userBalance –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * @return —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
     */
    public List<StarPackageOption> getAvailablePackages(Money userBalance) {
        List<StarPackageOption> packages = new ArrayList<>();

        // –ë–∞–∑–æ–≤—ã–µ –ø–∞–∫–µ—Ç—ã –∑–≤–µ–∑–¥
        addPackageIfAffordable(packages, userBalance, 100, Money.of("1.00"));
        addPackageIfAffordable(packages, userBalance, 500, Money.of("4.50"));
        addPackageIfAffordable(packages, userBalance, 1000, Money.of("8.00"));
        addPackageIfAffordable(packages, userBalance, 2500, Money.of("18.00"));
        addPackageIfAffordable(packages, userBalance, 5000, Money.of("35.00"));
        addPackageIfAffordable(packages, userBalance, 10000, Money.of("65.00"));

        return packages;
    }

    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ –º–µ–Ω—é –ø–æ–∫—É–ø–∫–∏ —Å –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –ø–∞–∫–µ—Ç–∞–º–∏
     */
    private TelegramUIResponse createPurchaseMenu(SimpleBalanceResponse balance) {
        List<StarPackageOption> availablePackages = getAvailablePackages(balance.getCurrentBalance());

        StringBuilder message = new StringBuilder();
        message.append("<b>").append(STAR_EMOJI).append(" –ü–æ–∫—É–ø–∫–∞ Telegram Stars</b>\n\n");
        message.append(MONEY_EMOJI).append(" <b>–í–∞—à –±–∞–ª–∞–Ω—Å:</b> ")
                .append(balance.getFormattedBalance()).append("\n\n");

        if (availablePackages.isEmpty()) {
            message.append(WARNING_EMOJI).append(" <i>–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –∑–≤–µ–∑–¥</i>\n");
            message.append("–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–∞–∫–µ—Ç–∞: 1.00 $");
        } else {
            message.append("–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞–∫–µ—Ç –∑–≤–µ–∑–¥ –¥–ª—è –ø–æ–∫—É–ø–∫–∏:\n\n");

            for (StarPackageOption pkg : availablePackages) {
                message.append(String.format("‚≠ê <b>%d –∑–≤–µ–∑–¥</b> - %s\n",
                        pkg.getStarCount(), pkg.getPrice().getFormattedAmount() + " $"));
            }

            message.append("\nüí° <i>–ó–≤–µ–∑–¥—ã —Å–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ —Å –±–∞–ª–∞–Ω—Å–∞</i>");
        }

        InlineKeyboardMarkup keyboard = createPurchaseKeyboard(availablePackages, balance);

        return TelegramUIResponse.newMessage(balance.getUserId(), message.toString())
                .keyboard(keyboard)
                .parseMode("HTML")
                .build();
    }

    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –∑–≤–µ–∑–¥
     */
    private InlineKeyboardMarkup createPurchaseKeyboard(List<StarPackageOption> packages,
            SimpleBalanceResponse balance) {
        InlineKeyboardMarkup keyboard = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> rows = new ArrayList<>();

        // –ö–Ω–æ–ø–∫–∏ –ø–∞–∫–µ—Ç–æ–≤ (–ø–æ 2 –≤ —Ä—è–¥—É)
        for (int i = 0; i < packages.size(); i += 2) {
            List<InlineKeyboardButton> row = new ArrayList<>();

            StarPackageOption pkg1 = packages.get(i);
            row.add(createPackageButton(pkg1));

            if (i + 1 < packages.size()) {
                StarPackageOption pkg2 = packages.get(i + 1);
                row.add(createPackageButton(pkg2));
            }

            rows.add(row);
        }

        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
        List<InlineKeyboardButton> controlRow = new ArrayList<>();
        controlRow.add(createButton("üí≥ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å", "topup_balance"));
        controlRow.add(createButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥", "back_to_balance"));
        rows.add(controlRow);

        keyboard.setKeyboard(rows);
        return keyboard;
    }

    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–∞–∫–µ—Ç–∞ –∑–≤–µ–∑–¥
     */
    private InlineKeyboardButton createPackageButton(StarPackageOption pkg) {
        String buttonText = String.format("%d ‚≠ê - %s $",
                pkg.getStarCount(),
                pkg.getPrice().getFormattedAmount());
        String callbackData = String.format("buy_stars_%d_%s",
                pkg.getStarCount(),
                pkg.getPrice().getAmount().toPlainString());

        return createButton(buttonText, callbackData);
    }

    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ã—á–Ω–æ–π –∫–Ω–æ–ø–∫–∏
     */
    private InlineKeyboardButton createButton(String text, String callbackData) {
        InlineKeyboardButton button = new InlineKeyboardButton();
        button.setText(text);
        button.setCallbackData(callbackData);
        return button;
    }

    /**
     * –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–∞–∫–µ—Ç–∞ –≤ —Å–ø–∏—Å–æ–∫, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –µ–≥–æ –∫—É–ø–∏—Ç—å
     */
    private void addPackageIfAffordable(List<StarPackageOption> packages, Money userBalance,
            Integer starCount, Money price) {
        if (userBalance.isGreaterThanOrEqual(price)) {
            packages.add(new StarPackageOption(starCount, price));
        }
    }

    /**
     * –°–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ–º –±–∞–ª–∞–Ω—Å–µ
     */
    private TelegramUIResponse createInactiveBalanceMessage(Long userId) {
        String messageText = WARNING_EMOJI + " <b>–ë–∞–ª–∞–Ω—Å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω</b>\n\n" +
                "–í–∞—à –±–∞–ª–∞–Ω—Å –≤—Ä–µ–º–µ–Ω–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.\n" +
                "–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –¥–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏.\n\n" +
                "<i>–ü–æ–∫—É–ø–∫–∞ –∑–≤–µ–∑–¥ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞</i>";

        InlineKeyboardMarkup keyboard = new InlineKeyboardMarkup();
        InlineKeyboardButton supportButton = createButton("üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞", "contact_support");
        keyboard.setKeyboard(List.of(List.of(supportButton)));

        return TelegramUIResponse.newMessage(userId, messageText)
                .keyboard(keyboard)
                .parseMode("HTML")
                .build();
    }

    /**
     * –°–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ—Å—Ç–∏ —Å—Ä–µ–¥—Å—Ç–≤
     */
    private TelegramUIResponse createInsufficientFundsMessage(SimpleBalanceResponse balance) {
        String messageText = WARNING_EMOJI + " <b>–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤</b>\n\n" +
                MONEY_EMOJI + " –í–∞—à –±–∞–ª–∞–Ω—Å: " + balance.getFormattedBalance() + "\n\n" +
                "–î–ª—è –ø–æ–∫—É–ø–∫–∏ –∑–≤–µ–∑–¥ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å.\n" +
                "–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–∞–∫–µ—Ç–∞: 1.00 $\n\n" +
                "<i>–ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –∏ –≤–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å!</i>";

        InlineKeyboardMarkup keyboard = new InlineKeyboardMarkup();
        List<InlineKeyboardButton> row = List.of(
                createButton("üí≥ –ü–æ–ø–æ–ª–Ω–∏—Ç—å", "topup_balance"),
                createButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥", "back_to_balance"));
        keyboard.setKeyboard(List.of(row));

        return TelegramUIResponse.newMessage(balance.getUserId(), messageText)
                .keyboard(keyboard)
                .parseMode("HTML")
                .build();
    }

    /**
     * –û–ø—Ü–∏—è –ø–∞–∫–µ—Ç–∞ –∑–≤–µ–∑–¥ –¥–ª—è –ø–æ–∫—É–ø–∫–∏
     */
    public static class StarPackageOption {
        private final Integer starCount;
        private final Money price;

        public StarPackageOption(Integer starCount, Money price) {
            this.starCount = starCount;
            this.price = price;
        }

        public Integer getStarCount() {
            return starCount;
        }

        public Money getPrice() {
            return price;
        }

        @Override
        public String toString() {
            return String.format("StarPackageOption{stars=%d, price=%s}",
                    starCount, price.getFormattedAmount());
        }
    }
}