# =================================================================
# TELEGRAM STAR MANAGER - LOCAL DEVELOPMENT CONFIGURATION
# =================================================================
# Этот файл содержит настройки для локальной разработки и тестирования
# Используйте этот профиль для тестирования админки и бота в IntelliJ IDEA

# =================================================================
# SPRING PROFILES
# =================================================================
spring.profiles.active=dev
spring.main.lazy-initialization=false

# =================================================================
# TELEGRAM BOT CONFIGURATION - LOCAL POLLING MODE
# =================================================================
# ВАЖНО: Замените YOUR_BOT_TOKEN_HERE на реальный токен вашего бота
telegram.bot.token=${TELEGRAM_BOT_TOKEN:7578674808:AAGMGC4GnVFuObFCm79W64VbV7SgapG18s8}
telegram.bot.username=${TELEGRAM_BOT_USERNAME:MirzaShop_bot}

# Bot timeout settings for local development
telegram.bot.connection-timeout=30
telegram.bot.read-timeout=60

# =================================================================
# SERVER CONFIGURATION
# =================================================================
server.port=8080
server.servlet.context-path=/
server.compression.enabled=false

# =================================================================
# LOCAL H2 DATABASE CONFIGURATION
# =================================================================
# H2 встроенная база данных для локальной разработки
spring.datasource.url=jdbc:h2:file:./data/local_starmanager;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

# H2 Console доступен по адресу: http://localhost:8080/h2-console
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.h2.console.settings.web-allow-others=false

# =================================================================
# JPA/HIBERNATE CONFIGURATION
# =================================================================
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.open-in-view=true

# =================================================================
# LOGGING CONFIGURATION - ПОДРОБНЫЕ ЛОГИ ДЛЯ ОТЛАДКИ
# =================================================================
logging.level.shit.back=DEBUG
logging.level.org.telegram=INFO
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.root=INFO

# Console logging pattern for development
logging.pattern.console=%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n

# =================================================================
# SECURITY CONFIGURATION - УПРОЩЕННАЯ ДЛЯ РАЗРАБОТКИ
# =================================================================
security.api.enabled=true
security.api.key=${API_SECRET_KEY:dev-secret-key-12345}
security.api.header-name=X-API-KEY

# Снижен лимит для тестирования
security.rate-limit.enabled=true
security.rate-limit.user-requests-per-minute=50
security.rate-limit.api-requests-per-minute=200

security.validation.enabled=true
security.validation.max-message-length=4096
security.validation.max-callback-data-length=64

security.audit.enabled=true
security.audit.log-level=DEBUG
security.audit.log-sensitive-data=true

# CORS для локальной разработки
security.cors.enabled=true
security.cors.allowed-origins=http://localhost:3000,http://localhost:8080
security.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
security.cors.allowed-headers=*
security.cors.max-age=3600

# =================================================================
# FEATURE FLAGS CONFIGURATION
# =================================================================
feature-flags.enabled=true
feature-flags.redis.enabled=false
feature-flags.cache.enabled=true
feature-flags.cache.ttl=600
feature-flags.events.enabled=true
feature-flags.admin.enabled=true

# =================================================================
# CACHE CONFIGURATION - ПРОСТОЙ КЭШИРОВАНИЕ ДЛЯ РАЗРАБОТКИ
# =================================================================
spring.cache.type=simple
spring.cache.cache-names=admin_performance,admin_recent_activity,admin_dashboard_cache
spring.cache.caffeine.spec=maximumSize=50,expireAfterWrite=5m

# =================================================================
# ASYNC CONFIGURATION
# =================================================================
spring.task.execution.pool.core-size=2
spring.task.execution.pool.max-size=4
spring.task.execution.pool.queue-capacity=25
spring.task.execution.thread-name-prefix=dev-async-
spring.task.scheduling.pool.size=2

# =================================================================
# MANAGEMENT/ACTUATOR ENDPOINTS
# =================================================================
management.endpoints.web.exposure.include=health,info,metrics,env,configprops
management.endpoint.health.show-details=always
management.endpoint.health.show-components=always
management.endpoints.web.base-path=/actuator

# =================================================================
# REDIS CONFIGURATION - ОТКЛЮЧЕН ДЛЯ ЛОКАЛЬНОЙ РАЗРАБОТКИ
# =================================================================
# Redis не требуется для локального тестирования
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.timeout=2000ms

# =================================================================
# BOT SELF-TEST CONFIGURATION
# =================================================================
telegram.self-test.enabled=true
telegram.self-test.delay-seconds=30

# =================================================================
# ADMIN DASHBOARD CONFIGURATION
# =================================================================
admin.cache.max-size=20
admin.cache.ttl-minutes=5
admin.async.disabled=false

# =================================================================
# JSON CONFIGURATION
# =================================================================
spring.jackson.property-naming-strategy=SNAKE_CASE
spring.jackson.default-property-inclusion=NON_NULL

# =================================================================
# DEV TOOLS (Если используете Spring Boot DevTools)
# =================================================================
spring.devtools.restart.enabled=true
spring.devtools.livereload.enabled=true
