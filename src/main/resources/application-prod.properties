# ============================================
# PRODUCTION DATABASE OVERRIDE
# ============================================

# PostgreSQL конфигурация для продакшена
spring.datasource.url=jdbc:postgresql://${DATABASE_HOST}:${DATABASE_PORT:5432}/${DATABASE_NAME}?sslmode=require&prepareThreshold=0
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=${DATABASE_USERNAME}
spring.datasource.password=${DATABASE_PASSWORD}

# JPA настройки для продакшена
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
# Комментарий: Spring Boot автоматически определяет диалект для PostgreSQL
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.id.new_generator_mappings=true
spring.jpa.properties.hibernate.use_sql_comments=false

# Connection Pool оптимизация для продакшена
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.leak-detection-threshold=30000
spring.datasource.hikari.validation-timeout=3000
spring.datasource.hikari.initialization-fail-timeout=10000

# PostgreSQL SSL настройки
spring.datasource.hikari.data-source-properties.ssl=true
spring.datasource.hikari.data-source-properties.sslmode=require

# JPA производительность для продакшена
spring.jpa.properties.hibernate.jdbc.batch_size=25
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

# Отключение H2 консоли в продакшене
spring.h2.console.enabled=false

# ============================================
# PRODUCTION SECURITY OVERRIDE
# ============================================

# Усиленные настройки безопасности для продакшена
security.api.enabled=true
security.api.key=${API_SECRET_KEY}
security.rate-limit.user-requests-per-minute=${RATE_LIMIT_USER_REQUESTS_PER_MINUTE:30}
security.rate-limit.api-requests-per-minute=${RATE_LIMIT_API_REQUESTS_PER_MINUTE:200}

# Продакшен валидация
security.validation.enabled=true
security.validation.max-message-length=4096
security.validation.max-callback-data-length=64

# Аудит безопасности в продакшене
security.audit.enabled=true
security.audit.log-level=INFO
security.audit.log-sensitive-data=false

# CORS для продакшена
security.cors.enabled=${SECURITY_CORS_ENABLED:true}
security.cors.allowed-origins=${SECURITY_CORS_ALLOWED_ORIGINS}
security.cors.allowed-methods=${SECURITY_CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,OPTIONS}
security.cors.allowed-headers=${SECURITY_CORS_ALLOWED_HEADERS:Content-Type,Authorization,X-API-KEY}
security.cors.max-age=3600

# IP Whitelist в продакшене
security.ip-whitelist.enabled=true
security.ip-whitelist.ton=${SECURITY_TON_IPS}
security.ip-whitelist.yookassa=${SECURITY_YOOKASSA_IPS}
security.ip-whitelist.qiwi=${SECURITY_QIWI_IPS}
security.ip-whitelist.sberpay=${SECURITY_SBERPAY_IPS}

# ============================================
# PRODUCTION PERFORMANCE OVERRIDE
# ============================================

# Системные таймауты оптимизированные для продакшена
app.system.timeouts.payment-timeout=PT10M
app.system.timeouts.sse-timeout=PT15M
app.system.timeouts.balance-operation-timeout=PT15S
app.system.timeouts.cleanup-interval=PT2M

# Системные лимиты для продакшена
app.system.limits.max-concurrent-balance-operations=10
app.system.limits.max-sse-connections=200
app.system.limits.max-batch-order-size=50
app.system.limits.max-admin-notes-length=2000

# Системные URL для продакшена
app.system.urls.webhook-base-url=${WEBHOOK_BASE_URL}
app.system.urls.payment-success-url=${PAYMENT_SUCCESS_URL:${app.system.urls.webhook-base-url}/payment/success}
app.system.urls.payment-failure-url=${PAYMENT_FAILURE_URL:${app.system.urls.webhook-base-url}/payment/failure}
app.system.urls.admin-panel-url=${ADMIN_PANEL_URL:${app.system.urls.webhook-base-url}/admin}

# Системный кэш для продакшена
app.system.cache.metrics-cache-ttl=PT2M
app.system.cache.dashboard-cache-ttl=PT1M
app.system.cache.user-stats-cache-ttl=PT5M
app.system.cache.max-cache-size=1000

# Метрики оптимизированные для продакшена
app.metrics.collection.interval=PT2M
app.metrics.collection.cache-refresh-interval=PT30S
app.metrics.collection.optimized-mode-enabled=true
app.metrics.collection.detailed-logging-enabled=false
app.metrics.collection.max-execution-time=PT5S

# Производительность метрик для продакшена
app.metrics.performance.base-response-time-ms=50
app.metrics.performance.response-time-variance-ms=30
app.metrics.performance.base-memory-usage-percent=65
app.metrics.performance.memory-usage-variance-percent=20
app.metrics.performance.min-cache-hit-ratio-percent=85

# SSE метрики для продакшена
app.metrics.sse.connection-timeout=PT15M
app.metrics.sse.max-active-connections=200
app.metrics.sse.heartbeat-interval=PT60S
app.metrics.sse.auto-cleanup-enabled=true

# Fallback метрики для продакшена
app.metrics.fallback.base-health-score=70
app.metrics.fallback.use-last-successful-metrics=true
app.metrics.fallback.max-last-metrics-age-minutes=3
app.metrics.fallback.detailed-fallback-logging=false

# Платежные системы URL для продакшена
payment.systems.ton.api-url=${TON_API_URL:https://tonapi.io}
payment.systems.ton.wallet-url=${TON_WALLET_URL:https://wallet.ton.org}
payment.systems.ton.explorer-url=${TON_EXPLORER_URL:https://tonapi.io}
payment.systems.yookassa.api-url=${YOOKASSA_API_URL:https://api.yookassa.ru/v3}
payment.systems.yookassa.checkout-url=${YOOKASSA_CHECKOUT_URL:https://yookassa.ru/checkout}
payment.systems.qiwi.api-url=${QIWI_API_URL:https://edge.qiwi.com}
payment.systems.qiwi.payment-url=${QIWI_PAYMENT_URL:https://oplata.qiwi.com/create}
payment.systems.sberpay.api-url=${SBERPAY_API_URL:https://api.sberbank.ru/prod/acquiring/v1}
payment.systems.sberpay.payment-url=${SBERPAY_PAYMENT_URL:https://securepayments.sberbank.ru/payment/merchants}

# Тестовые платежи отключены в продакшене
payment.test.enabled=false
payment.test.success-rate=95
payment.test.processing-delay-seconds=1
payment.test.auto-complete-enabled=false

# Логирование оптимизированное для продакшена
logging.level.shit.back=INFO
logging.level.shit.back.service.BackgroundMetricsService=WARN
logging.level.shit.back.service.PaymentService=INFO
logging.level.shit.back.service.BalanceService=INFO
logging.level.org.springframework.web=WARN
logging.level.org.hibernate.SQL=WARN
logging.level.org.springframework=WARN
logging.level.org.hibernate=WARN
logging.level.com.zaxxer.hikari=WARN
logging.level.org.telegram=INFO

# Spring оптимизация для продакшена
spring.main.lazy-initialization=false
spring.jmx.enabled=true

# Асинхронная конфигурация для продакшена
spring.task.execution.pool.core-size=4
spring.task.execution.pool.max-size=8
spring.task.execution.pool.queue-capacity=50
spring.task.scheduling.pool.size=4

# Tomcat оптимизация для продакшена
server.tomcat.max-threads=200
server.tomcat.min-spare-threads=10
server.tomcat.accept-count=100
server.tomcat.max-connections=8192
server.tomcat.connection-timeout=20000

# ============================================
# PRODUCTION CACHE OVERRIDE
# ============================================

# Кэш оптимизация для продакшена
spring.cache.caffeine.spec=maximumSize=1000,expireAfterWrite=2m,recordStats
spring.cache.type=caffeine

# Баланс кэш для продакшена
balance.enable-balance-caching=true
balance.balance-cache-ttl-minutes=2

# Платежи кэш для продакшена
payment.cache.enabled=true
payment.cache.payment-status-ttl=120
payment.cache.config-ttl=1800
payment.cache.max-size=2000

# Redis конфигурация для продакшена
spring.data.redis.host=${REDIS_HOST}
spring.data.redis.port=${REDIS_PORT:6379}
spring.data.redis.password=${REDIS_PASSWORD}
spring.data.redis.database=${REDIS_DATABASE:0}
spring.data.redis.timeout=2000ms
spring.data.redis.lettuce.pool.max-active=${REDIS_POOL_MAX_ACTIVE:16}
spring.data.redis.lettuce.pool.max-wait=1000ms
spring.data.redis.lettuce.pool.max-idle=${REDIS_POOL_MAX_IDLE:8}
spring.data.redis.lettuce.pool.min-idle=${REDIS_POOL_MIN_IDLE:2}
spring.data.redis.lettuce.shutdown-timeout=100ms

# Management endpoints для продакшена
management.endpoints.web.exposure.include=health,info,metrics
management.endpoints.enabled-by-default=false
management.endpoint.health.enabled=true
management.endpoint.info.enabled=true
management.endpoint.metrics.enabled=true
management.endpoint.health.show-details=when-authorized
management.endpoint.health.show-components=when-authorized

# Telegram Bot для продакшена
telegram.bot.webhook-url=${TELEGRAM_BOT_WEBHOOK_URL}
telegram.bot.connection-timeout=30
telegram.bot.read-timeout=60
telegram.bot.webhook-timeout=30
telegram.self-test.enabled=true
telegram.self-test.delay-seconds=120

# Производительность баланса для продакшена
balance.max-concurrent-operations-per-user=5
balance.max-concurrent-operations=15
balance.rate-limit-operations-per-minute=20
balance.transaction-timeout-minutes=15
balance.connection-pool-size=15
balance.database-timeout-seconds=20

# Производительность платежей для продакшена
payment.general.payment-timeout-minutes=20
payment.general.max-retry-attempts=5
payment.general.retry-interval-minutes=3
payment.timeouts.connection-timeout-seconds=15
payment.timeouts.read-timeout-seconds=45
payment.database.pool-size=15
payment.database.connection-timeout-seconds=45
payment.webhook.processing-timeout-seconds=45
payment.webhook.thread-pool-size=8

# Уведомления в продакшене
payment.notifications.telegram.enabled=${PAYMENT_NOTIFICATIONS_TELEGRAM_ENABLED:true}
payment.notifications.email.enabled=${PAYMENT_NOTIFICATIONS_EMAIL_ENABLED:true}